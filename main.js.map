{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-customer/add-customer.component.css","webpack:///./src/app/components/add-customer/add-customer.component.html","webpack:///./src/app/components/add-customer/add-customer.component.ts","webpack:///./src/app/components/add-invoice/add-invoice.component.css","webpack:///./src/app/components/add-invoice/add-invoice.component.html","webpack:///./src/app/components/add-invoice/add-invoice.component.ts","webpack:///./src/app/components/add-product/add-product.component.html","webpack:///./src/app/components/add-product/add-product.component.scss","webpack:///./src/app/components/add-product/add-product.component.ts","webpack:///./src/app/components/customer-details/customer-details.component.css","webpack:///./src/app/components/customer-details/customer-details.component.html","webpack:///./src/app/components/customer-details/customer-details.component.ts","webpack:///./src/app/components/customers/customers.component.css","webpack:///./src/app/components/customers/customers.component.html","webpack:///./src/app/components/customers/customers.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/edit-customer/edit-customer.component.css","webpack:///./src/app/components/edit-customer/edit-customer.component.html","webpack:///./src/app/components/edit-customer/edit-customer.component.ts","webpack:///./src/app/components/edit-orders/edit-orders.component.css","webpack:///./src/app/components/edit-orders/edit-orders.component.html","webpack:///./src/app/components/edit-orders/edit-orders.component.ts","webpack:///./src/app/components/edit-product/edit-product.component.html","webpack:///./src/app/components/edit-product/edit-product.component.scss","webpack:///./src/app/components/edit-product/edit-product.component.ts","webpack:///./src/app/components/homepage/homepage.component.css","webpack:///./src/app/components/homepage/homepage.component.html","webpack:///./src/app/components/homepage/homepage.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/notfound/notfound.component.css","webpack:///./src/app/components/notfound/notfound.component.html","webpack:///./src/app/components/notfound/notfound.component.ts","webpack:///./src/app/components/order-details/order-details.component.css","webpack:///./src/app/components/order-details/order-details.component.html","webpack:///./src/app/components/order-details/order-details.component.ts","webpack:///./src/app/components/orders/orders.component.css","webpack:///./src/app/components/orders/orders.component.html","webpack:///./src/app/components/orders/orders.component.ts","webpack:///./src/app/components/product-details/product-details.component.css","webpack:///./src/app/components/product-details/product-details.component.html","webpack:///./src/app/components/product-details/product-details.component.ts","webpack:///./src/app/components/products/products.component.css","webpack:///./src/app/components/products/products.component.html","webpack:///./src/app/components/products/products.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/report/report.component.css","webpack:///./src/app/components/report/report.component.html","webpack:///./src/app/components/report/report.component.ts","webpack:///./src/app/components/settings/settings.component.css","webpack:///./src/app/components/settings/settings.component.html","webpack:///./src/app/components/settings/settings.component.ts","webpack:///./src/app/components/shop/shop.component.css","webpack:///./src/app/components/shop/shop.component.html","webpack:///./src/app/components/shop/shop.component.ts","webpack:///./src/app/components/shopping-cart/shopping-cart.component.css","webpack:///./src/app/components/shopping-cart/shopping-cart.component.html","webpack:///./src/app/components/shopping-cart/shopping-cart.component.ts","webpack:///./src/app/components/sidebar/sidebar.component.css","webpack:///./src/app/components/sidebar/sidebar.component.html","webpack:///./src/app/components/sidebar/sidebar.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/register.guard.ts","webpack:///./src/app/service/auth.service.ts","webpack:///./src/app/service/customer.service.ts","webpack:///./src/app/service/invoice.service.ts","webpack:///./src/app/service/item.service.ts","webpack:///./src/app/service/settings.service.ts","webpack:///./src/app/ui/loading-spinner/loading-spinner.component.html","webpack:///./src/app/ui/loading-spinner/loading-spinner.component.scss","webpack:///./src/app/ui/loading-spinner/loading-spinner.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { CustomersComponent } from './components/customers/customers.component';\nimport { AddCustomerComponent } from './components/add-customer/add-customer.component';\nimport { EditCustomerComponent } from './components/edit-customer/edit-customer.component';\nimport { CustomerDetailsComponent } from './components/customer-details/customer-details.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ShopComponent } from './components/shop/shop.component';\nimport { HomepageComponent } from './components/homepage/homepage.component';\nimport { ProductsComponent } from './components/products/products.component';\nimport { AddProductComponent } from './components/add-product/add-product.component';\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\nimport {EditProductComponent} from './components/edit-product/edit-product.component';\nimport { ShoppingCartComponent } from './components/shopping-cart/shopping-cart.component';\nimport { OrdersComponent } from './components/orders/orders.component';\nimport { OrderDetailsComponent } from './components/order-details/order-details.component';\nimport {AddInvoiceComponent} from './components/add-invoice/add-invoice.component';\nimport { ReportComponent } from './components/report/report.component';\nimport { EditOrdersComponent } from './components/edit-orders/edit-orders.component';\nimport {SettingsComponent} from './components/settings/settings.component';\nimport { NotfoundComponent } from './components/notfound/notfound.component';\n\nimport { AuthGuard } from './guards/auth.guard';\nimport {RegisterGuard} from './guards/register.guard';\n\n\n\nconst routes: Routes = [\n  { path: ''                      ,  redirectTo: '/orders', pathMatch: 'full' , canActivate:[AuthGuard] },\n  { path: 'customers'             ,  component:  CustomersComponent           , canActivate:[AuthGuard] },\n  { path: 'customer/add'          ,  component:  AddCustomerComponent         , canActivate:[AuthGuard] },\n  { path: 'customer/edit/:id'     ,  component:  EditCustomerComponent        , canActivate:[AuthGuard] },\n  { path: 'customer/:id'          ,  component:  CustomerDetailsComponent     , canActivate:[AuthGuard] },\n  { path: 'login'                 ,  component:  LoginComponent },\n  { path: 'register'              ,  component:  RegisterComponent            , canActivate:[RegisterGuard]}, \n  { path: 'shop'                  ,  component:  ShopComponent                , canActivate:[AuthGuard] },\n  { path: 'home'                  ,  component:  HomepageComponent            , canActivate:[AuthGuard] },\n  { path: 'products'              ,  component:  ProductsComponent            , canActivate:[AuthGuard] },\n  { path: 'product/add'           ,  component:  AddProductComponent          , canActivate:[AuthGuard] },\n  { path: 'product/:id'           ,  component:  ProductDetailsComponent      , canActivate:[AuthGuard] },\n  { path: 'product/edit/:id'      ,  component:  EditProductComponent         , canActivate:[AuthGuard] },\n  { path: 'cart'                  ,  component:  ShoppingCartComponent        , canActivate:[AuthGuard] },\n  { path: 'orders'                ,  component:  OrdersComponent              , canActivate:[AuthGuard] },\n  { path: 'order/:id'             ,  component:  OrderDetailsComponent        , canActivate:[AuthGuard] },\n  { path: 'invoice/add'           ,  component:  AddInvoiceComponent          , canActivate:[AuthGuard] },\n  { path: 'report'                ,  component:  ReportComponent              , canActivate:[AuthGuard] },\n  { path: 'order/edit/:id'        ,  component:  EditOrdersComponent          , canActivate:[AuthGuard] },\n  { path: 'settings'              ,  component:  SettingsComponent            , canActivate:[AuthGuard] },\n  { path: '**'                    ,  component:  NotfoundComponent}\n]\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  providers: [AuthGuard, RegisterGuard]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <ng-flash-message></ng-flash-message>\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Preorder Online';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { FormsModule } from '@angular/forms';\nimport { NgxSmartModalModule } from 'ngx-smart-modal';\n\nimport { DataTablesModule } from 'angular-datatables';\n\nimport { NgFlashMessagesModule } from 'ng-flash-messages';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport {AngularFireStorageModule} from '@angular/fire/storage';\n\nimport { environment } from '../environments/environment';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { CustomersComponent } from './components/customers/customers.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { AddCustomerComponent } from './components/add-customer/add-customer.component';\nimport { EditCustomerComponent } from './components/edit-customer/edit-customer.component';\nimport { CustomerDetailsComponent } from './components/customer-details/customer-details.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { NotfoundComponent } from './components/notfound/notfound.component';\nimport { ShopComponent } from './components/shop/shop.component';\nimport { HomepageComponent } from './components/homepage/homepage.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { ProductsComponent } from './components/products/products.component';\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\nimport { ShoppingCartComponent } from './components/shopping-cart/shopping-cart.component';\nimport { OrdersComponent } from './components/orders/orders.component';\nimport { OrderDetailsComponent } from './components/order-details/order-details.component';\nimport { ReportComponent } from './components/report/report.component';\n\nimport { InvoiceService } from './service/invoice.service';\nimport { CustomerService } from './service/customer.service';\nimport { EditOrdersComponent } from './components/edit-orders/edit-orders.component';\nimport { ItemService } from './service/item.service';\nimport { AddInvoiceComponent } from './components/add-invoice/add-invoice.component';\nimport {AuthService} from './service/auth.service';\nimport {SettingsService} from './service/settings.service';\nimport { SettingsComponent } from './components/settings/settings.component';\n\nimport { Chart } from 'chart.js';\nimport { AddProductComponent } from './components/add-product/add-product.component';\nimport { EditProductComponent } from './components/edit-product/edit-product.component';\n\nimport { LoadingSpinnerComponent } from './ui/loading-spinner/loading-spinner.component';\n\nimport {MatTabsModule} from '@angular/material/tabs';\n\n//import { NgxCountrySelectModule } from 'ngx-country-select';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    DashboardComponent,\n    CustomersComponent,\n    SidebarComponent,\n    AddCustomerComponent,\n    EditCustomerComponent,\n    CustomerDetailsComponent,\n    LoginComponent,\n    RegisterComponent,\n    NotfoundComponent,\n    ShopComponent,\n    HomepageComponent,\n    ProductsComponent,\n    ProductDetailsComponent,\n    ShoppingCartComponent,\n    OrdersComponent,\n    OrderDetailsComponent,\n    ReportComponent,\n    EditOrdersComponent,\n    AddInvoiceComponent,\n    SettingsComponent,\n    AddProductComponent,\n    EditProductComponent,\n    LoadingSpinnerComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase, 'preorder-app'),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    AngularFireStorageModule,\n    NgFlashMessagesModule.forRoot(),\n    NgxSmartModalModule.forRoot(),\n    MDBBootstrapModule.forRoot(),\n    DataTablesModule,\n    MatTabsModule,\n  ],\n  providers: [\n    InvoiceService,\n    CustomerService,\n    ItemService,\n    AuthService,\n    SettingsService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <nav aria-label=\\\"breadcrumb\\\">\\n        <ol class=\\\"breadcrumb\\\">\\n            <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/customers\\\">Customers</a></li>\\n            <li class=\\\"breadcrumb-item active\\\">Add Customer</li>\\n        </ol>\\n    </nav>\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          Add Client\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form #customerForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(customerForm)\\\" >\\n            <!-----------First Name--------------->\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"firstName\\\">First Name </label>\\n              <input \\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                name=\\\"firstName\\\"\\n                #firstName=\\\"ngModel\\\"\\n                [ngClass] = \\\"{'is-invalid': firstName.errors && firstName.touched}\\\"\\n                [(ngModel)]=\\\"customer.firstName\\\"\\n                minlength=\\\"2\\\"\\n                required\\n              >\\n              <div [hidden]=\\\"!firstName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                First name required\\n              </div>\\n              <div [hidden]=\\\"!firstName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                  Must be at least 2 characters\\n              </div>\\n            </div>\\n            <!-----------Last Name--------------->\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"lastName\\\">Last Name</label>\\n              <input \\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                name=\\\"lastName\\\"\\n                #lastName = \\\"ngModel\\\"\\n                [(ngModel)] = \\\"customer.lastName\\\"\\n                [ngClass]=\\\"{'is-invalid': lastName.errors && lastName.touched}\\\"\\n                minlength=\\\"2\\\"\\n                required\\n              >\\n              <div [hidden]=\\\"!lastName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                Last name required\\n              </div>\\n              <div [hidden]=\\\"!lastName.errors?.minlength\\\" class=\\\"invalid-feedback\\\" >\\n                Must be at least 2 characters\\n              </div>\\n            </div>\\n            <!---------------Email--------------->\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"email\\\">Email</label>\\n              <input \\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                name=\\\"email\\\"\\n                #email = \\\"ngModel\\\"\\n                [(ngModel)] = \\\"customer.email\\\"\\n                [ngClass]=\\\"{'is-invalid': email.errors && email.touched}\\\"\\n                pattern =\\\"^[\\\\w]{1,}[\\\\w.+-]{0,}@[\\\\w-]{2,}([.][a-zA-Z]{2,}|[.][\\\\w-]{2,}[.][a-zA-Z]{2,})$\\\"\\n                required\\n                >\\n                <div [hidden]=\\\"!email.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                  Email required\\n                </div>\\n                <div [hidden]=\\\"!email.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                  Email is invalid\\n                </div>\\n            </div>\\n            <!---------------Contact Number--------------->\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"contactNumber\\\">Contact Number</label>\\n              <input \\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                name=\\\"contactNumber\\\"          \\n                #contactNumber = \\\"ngModel\\\"\\n                [(ngModel)]=\\\"customer.contactNumber\\\"\\n                [ngClass]=\\\"{'is-invalid': contactNumber.errors && contactNumber.touched}\\\"\\n                minlength = \\\"10\\\"\\n                required\\n                >\\n                <div [hidden]=\\\"!contactNumber.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                  Contact number required\\n                </div>\\n                <div [hidden]=\\\"!contactNumber.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                  Must be at least 10 characters\\n                </div>\\n            </div>\\n            <!---------------Address--------------->\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"line1\\\">Street, Building, Area</label>\\n              <input \\n                type=\\\"text\\\"\\n                name=\\\"line1\\\"\\n                class=\\\"form-control\\\"\\n                #line1 = \\\"ngModel\\\"\\n                [(ngModel)]=\\\"customer.address.line1\\\"\\n                [ngClass]=\\\"{'is-invalid': line1.errors && line1.touched}\\\"\\n                minlength=\\\"2\\\"\\n                required\\n                >\\n                <div [hidden]=\\\"!line1.errors?.required\\\" class=\\\"invalid-feedback\\\">   \\n                    Street, Building, Area is required\\n                </div>\\n                <div [hidden]=\\\"!line1.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                  Must be at least 2 characters\\n                </div>\\n                <label for=\\\"city\\\">City</label>\\n                <input \\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    name=\\\"city\\\"\\n                    #city = \\\"ngModel\\\"\\n                    [(ngModel)]=\\\"customer.address.city\\\"\\n                    [ngClass]=\\\"{'is-invalid': city.errors && city.touched }\\\"\\n                    minlength=\\\"2\\\"\\n                    required\\n                  >\\n                  <div [hidden]=\\\"!city.errors?.required\\\" class=\\\"invalid-feedback\\\" >\\n                    City is required\\n                  </div>\\n                  <div [hidden]=\\\"!city.errors?.minlength\\\" class=\\\"invalid-feedback\\\" > \\n                    Must be at least 2 characters\\n                  </div>\\n                  <label for=\\\"country\\\">Country</label>\\n                  <select name=\\\"country\\\" id=\\\"country\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"customer.address.country\\\" >\\n                    <option value=\\\"United Arab Emirates\\\">United Arab Emirates</option>\\n                    <option value=\\\"Philippines\\\">Philippines</option>\\n                    <option value=\\\"others\\\">Others</option>\\n                  </select>\\n            </div>\\n            <input [disabled]=\\\"customerForm.invalid\\\" type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary btn-block\\\">\\n          </form>\\n        </div>\\n      </div>\\n\\n\\n</div>\\n\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {Location} from '@angular/common';\n\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport { CustomerService } from '../../service/customer.service';\n\nimport { Customer} from '../../models/customer';\n\n@Component({\n  selector: 'app-add-customer',\n  templateUrl: './add-customer.component.html',\n  styleUrls: ['./add-customer.component.css']\n})\nexport class AddCustomerComponent implements OnInit {\n\n  customer : Customer = {\n    firstName : '',\n    lastName :'',\n    email : '',\n    contactNumber : '',\n    address : { \n        line1 : '',\n        city: '',\n        country: ''\n    }\n  }\n\n\n  @ViewChild('customerForm') form: any;\n\n  constructor(private flashMessage: NgFlashMessageService,\n              private customerService: CustomerService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private location: Location          \n    ) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit({value, valid} : {value: Customer, valid: boolean}){ //for now there's no use for VALUE (will check later)\n    if(!valid){\n      //show error\n      this.flashMessage.showFlashMessage({messages: [\"Please fill out the form correctly\"], type: 'danger', timeout: 4000});\n    }else{\n      this.customerService.newClient(this.customer);\n      this.flashMessage.showFlashMessage({messages:[\"New Client added\"], type: 'success', timeout: 4000});\n      // this.router.navigate(['/customers']);\n      this.location.back();\n    }\n  }\n\n  goBack(): void{\n    this.location.back();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav aria-label=\\\"breadcrumb\\\">\\n    <ol class=\\\"breadcrumb\\\">\\n      <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Invoices</a></li>\\n      <li class=\\\"breadcrumb-item active\\\">Add Invoice</li>\\n    </ol>\\n  </nav>\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <h2>Add Invoice</h2>\\n      <!-- <button (click)=\\\"goBack()\\\" ><i class=\\\"fa fa-arrow-circle-o-left\\\"></i> Back</button> -->\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"pull-right\\\">\\n            <p class=\\\"text-info\\\">\\n              Date: {{invoice.dateInvoiced | date}}\\n            </p>\\n          </div>\\n    </div>\\n  </div>\\n  <br>\\n    <div>\\n      <form #invoiceForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(invoiceForm)\\\">\\n          <div class=\\\"card\\\">\\n              <div class=\\\"card-header\\\">\\n                Add Details\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                  <!-- Show Customer Names-->\\n                  <div class=\\\"form-group row\\\" *ngIf=\\\"customers.length > 0\\\">\\n                      <label for=\\\"customerId\\\" class=\\\"col-md-2 col-form-label\\\">Customer</label>\\n                      <div class=\\\"col-md-10\\\">\\n                          <select \\n                              name=\\\"customerId\\\" \\n                              id=\\\"customerId\\\" \\n                              class=\\\"form-control\\\" \\n                              [(ngModel)]=\\\"invoice.customerId\\\"\\n                              #customerId = \\\"ngModel\\\"\\n                              required\\n                              >\\n                                  <option value=\\\"\\\">Select Customer</option>\\n                                  <option *ngFor=\\\"let customer of customers\\\"  value=\\\"{{customer.id}}\\\"> {{customer.firstName | titlecase }} {{customer.lastName | titlecase}} </option>\\n                          </select>\\n                          <div [hidden]=\\\"!customerId.invalid\\\" class=\\\"text-danger\\\">\\n                              <small>Customer required</small> \\n                          </div>\\n                      </div>\\n                </div> \\n                \\n                <!--Delivery Option--->\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"deliveryOption\\\" class=\\\"col-md-2 col-form-label\\\">Delivery Option</label>\\n                  <div class=\\\"col-md-10\\\">\\n                      <select \\n                          name=\\\"deliveryOption\\\" \\n                          id=\\\"deliveryOption\\\" \\n                          class=\\\"form-control\\\"\\n                          [(ngModel)]=\\\"invoice.deliveryOption\\\"\\n                          #deliveryOption = \\\"ngModel\\\"\\n                          required\\n                        >\\n                          <option value=\\\"\\\">Select Delivery</option>\\n                          <option value=\\\"Meet-up\\\">Meet-up</option>\\n                          <option value=\\\"Shipment\\\">Shipment</option>\\n                        </select>\\n                        <div [hidden]=\\\"!deliveryOption.invalid\\\" class=\\\"text-danger\\\" >\\n                          <small>Delivery option required.</small>\\n                        </div>\\n                      </div>\\n                  </div>\\n                 \\n                <!--Freight Cost-->\\n                <div *ngIf=\\\"invoice.deliveryOption === 'Shipment'\\\" class=\\\"form-group row\\\">\\n                  <label for=\\\"freight\\\" class=\\\"col-md-2 col-form-label\\\">Freight</label>\\n                  <div class=\\\"col-md-10\\\">\\n                      <input \\n                          type=\\\"number\\\"\\n                          class=\\\"form-control\\\"\\n                          name=\\\"freight\\\"\\n                          #freight = \\\"ngModel\\\"\\n                          [(ngModel)]= \\\"invoice.freight\\\"\\n                      >\\n                  </div>\\n                  \\n                </div>\\n                <!--Discount-->\\n                <div class=\\\"form-group row\\\">\\n                    <label for=\\\"discount\\\" class=\\\"col-md-2 col-form-label\\\" >Discount</label>\\n                    <div class=\\\"col-md-10\\\">\\n                        <input \\n                          type=\\\"number\\\"\\n                          class=\\\"form-control\\\"\\n                          name=\\\"discount\\\"\\n                          #discount = \\\"ngModel\\\"\\n                          [(ngModel)] = \\\"invoice.discount\\\"\\n                        >\\n                    </div>\\n                </div>\\n\\n                <!--Remarks-->\\n                <div class=\\\"form-group row\\\">\\n                    <label for=\\\"remarks\\\" class=\\\"col-md-2 col-form-label\\\">Remarks</label>\\n                    <div class=\\\"col-md-10\\\">\\n                        <textarea \\n                            class=\\\"form-control rounded-0 \\\" \\n                            name = \\\"remarks\\\"\\n                            #remarks = \\\"ngModel\\\"\\n                            [(ngModel)]=\\\"invoice.remarks\\\"\\n                            rows=\\\"5\\\">\\n                        </textarea>\\n                    </div>\\n                  </div>\\n              </div>\\n          </div>\\n          <br>\\n          <div class=\\\"card\\\">\\n              <div class=\\\"card-header\\\">\\n                Add Item\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                  <a  data-toggle=\\\"modal\\\" data-target=\\\"#addItemModal\\\">\\n                      <i class=\\\"fa fa-plus text-primary\\\"> Add Items</i>\\n                  </a>\\n              </div>\\n              <div class=\\\"modal fade\\\" id=\\\"addItemModal\\\">\\n                  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n                    <div class=\\\"modal-content\\\">\\n                      <div class=\\\"modal-header\\\">\\n                        <h5 class=\\\"modal-title\\\" id=\\\"addItemModalTitle\\\">\\n                          Add Item\\n                        </h5>\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                          <span aria-hidden=\\\"true\\\">&times;</span>\\n                        </button>\\n                      </div>\\n                      <div class=\\\"modal-body\\\">\\n                        <form>\\n                          <div class=\\\"form-group\\\">\\n                            <label for=\\\"itemName\\\">Item Name</label>\\n                            <select \\n                              name=\\\"itemName\\\" \\n                              class=\\\"form-control\\\"\\n                              id=\\\"itemName\\\"\\n                              #itemName = \\\"ngModel\\\"\\n                              [(ngModel)]=\\\"listItem.itemId\\\"\\n                            >\\n                              <option value=\\\"\\\">Select Item</option>\\n                              <option *ngFor=\\\"let item of items\\\" value=\\\"{{item.id}}\\\"> {{item.itemName}} </option>\\n                            </select>\\n                          </div>\\n                          <div class=\\\"form-group\\\">\\n                            <label for=\\\"itemQuantity\\\">Quantity</label>\\n                            <input \\n                              type=\\\"number\\\" \\n                              id=\\\"itemQuantity\\\" \\n                              class=\\\"form-control\\\" \\n                              name=\\\"itemQuantity\\\" \\n                              #itemQuantity=\\\"ngModel\\\"\\n                              [ngClass]=\\\"{'is-invalid': itemQuantity.errors && itemQuantity.touched }\\\"\\n                              [(ngModel)] = \\\"listItem.quantity\\\"\\n                              required\\n                              >\\n                              <div [hidden]=\\\"itemQuantity.errors?.required && itemQuantity.value > 0 \\\" class=\\\"invalid-feedback\\\">\\n                                Please enter a valid quantity\\n                              </div>\\n                          </div>\\n                          \\n                        </form>\\n                      </div>\\n                      <div class=\\\"modal-footer\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addItem()\\\" data-dismiss=\\\"modal\\\">Save</button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div> \\n                <!--Display Items-->\\n              <div [hidden]=\\\"invoice.listItemArray.length < 1 \\\" class=\\\"m-md-4\\\">\\n                \\n                <table class=\\\"table table-hover table-fixed table-responsive\\\">\\n                  <thead>\\n                    <th >Name</th>\\n                    <th>Price</th>\\n                    <th>Quantity</th>\\n                    <th>Description</th>\\n                    <th>Line Total</th>\\n                    <th>Stock Status</th>\\n                    <th></th>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let itemToDisplay of invoice.listItemArray\\\" >\\n                      <td>\\n                          {{getItemDetails(itemToDisplay.itemId)}}\\n                          {{displayItem.itemName}}\\n                      </td>\\n                      <td> {{displayItem.unitPriceAed | currency: \\\"AED\\\"}}</td>\\n                      <td> {{itemToDisplay.quantity}} </td>\\n                      <td> {{displayItem.itemDesc}} </td>\\n                      <td> {{ itemToDisplay.quantity * displayItem.unitPriceAed | currency: 'AED'}} </td>\\n                      <td> {{ displayItem.stockStatus}} </td>\\n                        <td class=\\\"pull-right\\\"> \\n                          <a class=\\\"px-2 text-primary\\\" (click)=\\\"editItem(itemToDisplay)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editItemModal\\\" > <i class=\\\"fa fa-edit fa-2x\\\"></i> </a>\\n                          <a class=\\\"px-2 text-danger\\\" (click)=\\\"deleteItem(itemToDisplay.itemId)\\\" > <i class=\\\"fa fa-trash fa-2x\\\"></i> </a>\\n                       </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n              </div>\\n  \\n              <!-- Modal to Edit Item -->\\n          <div class=\\\"modal fade\\\" id=\\\"editItemModal\\\" >\\n            <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n              <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h5 class=\\\"modal-title\\\" id=\\\"editItemModalTitle\\\">\\n                        Edit Item \\n                      </h5>\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-lable=\\\"Close\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                      </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                  <form>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"itemName\\\">Item Name: </label>\\n                      <input \\n                        readonly\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control form-control-plaintext\\\"\\n                        name=\\\"itemName\\\"\\n                        id=\\\"itemName\\\"\\n                        [(ngModel)]=\\\"itemNameToEdit\\\"\\n                        >\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"quantity\\\">Quantity</label>\\n                      <input \\n                        type=\\\"number\\\"\\n                        class=\\\"form-control\\\"\\n                        name=\\\"quantity\\\"\\n                        id=\\\"quantity\\\"\\n                        value=\\\"quantity\\\"\\n                        #quantity = \\\"ngModel\\\"\\n                        [ngClass]=\\\"{'is-invalid': quantity.errors && quantity.touched}\\\"\\n                        [(ngModel)]=\\\"listItemToEdit.quantity\\\"\\n                        required\\n                        >\\n                        <div [hidden]=\\\"quantity.errors?.required && quantity.value > 0\\\" class=\\\"invalid-feedback\\\">\\n                            Please enter a valid quantity\\n                          </div>\\n                    </div>\\n                  </form>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateItem()\\\" data-dismiss=\\\"modal\\\">Update</button>\\n                </div>\\n              </div>\\n            </div>\\n           </div>\\n          </div>\\n          <br>\\n          <div>\\n              <input [disabled]=\\\"invoice.listItemArray.length == 0 || invoiceForm.invalid\\\" type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary btn-block\\\">\\n          </div>\\n        </form>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../../service/customer.service';\nimport { InvoiceService } from '../../service/invoice.service';\nimport {Location} from '@angular/common';\nimport {ItemService} from '../../service/item.service';\n\nimport { NgFlashMessageService } from 'ng-flash-messages';\n\nimport {Customer} from '../../models/customer';\nimport {ListItem, Payment, Invoice} from '../../models/Invoice';\nimport {Item} from '../../models/item';\n\n@Component({\n  selector: 'app-add-invoice',\n  templateUrl: './add-invoice.component.html',\n  styleUrls: ['./add-invoice.component.css']\n})\nexport class AddInvoiceComponent implements OnInit {\n  invoiceNumber: string;\n  customers : Customer[] = [];\n  items: Item [] = [];\n  displayItem : Item = {};\n  validForm: boolean = false;\n  duplicateFound: boolean = false;\n  indexToDelete : number;\n  invoice: Invoice = {\n    invoiceNumber : '',\n    customerId : '',\n    discount : 0,\n    freight : 0,\n    status : 'Pending',\n    dateInvoiced : Date.now(),\n    dateDelivered : Date.now(),\n    remarks : '',\n    listItemArray :  [],\n    payments : []\n  }\n  \n  listItem : ListItem = {\n      itemId : '',\n      quantity : 0,\n  }\n\n  //Item To Edit Modal Variables\n  itemNameToEdit: string = '';\n  listItemToEdit: ListItem = {\n    itemId: '',\n    quantity: 0\n  }\n\n  constructor(private customerService: CustomerService,\n              private location: Location,\n              private flashMessage: NgFlashMessageService,\n              private itemService: ItemService,\n              private invoiceService: InvoiceService  \n    ) { }\n\n  ngOnInit() {\n    this.customerService.getCustomers().subscribe(\n        customers => this.customers = customers\n    );\n\n    this.itemService.getItems().subscribe(\n        items => this.items = items\n    );\n  }\n\n  goBack():void{\n    this.location.back();\n  }\n  \n  onSubmit({value, valid} : {value: Invoice, valid: boolean}){\n    if(!valid){\n      this.flashMessage.showFlashMessage({messages: [\"Please fill out the form correctly\"], type: 'danger', timeout: 4000});\n    }else{\n      value = {...this.invoice};\n      if(value.deliveryOption == 'Meet-up'){\n        value.freight = 0;\n      }\n      value.invoiceNumber =  `FPS${new Date().getTime()}`;\n      this.invoiceService.newInvoice(value);\n      this.flashMessage.showFlashMessage({messages: [\"New invoice added\"], type:'success',timeout: 4000});\n      this.location.back();\n    }\n  }\n\n  getItemDetails(id : string){\n    this.items.forEach( itemDetails => {\n      if(itemDetails.id == id){\n        this.displayItem = itemDetails;\n      }\n    });\n    \n  }\n\n  addItem(){\n    this.duplicateFound = false;\n    if(this.listItem.quantity < 1 || !this.listItem.itemId){\n      // clear the list item\n      this.listItem = {\n        itemId : '',\n        quantity : 0,\n      }\n      this.flashMessage.showFlashMessage({messages: [\"Please enter item correctly\"], type: 'danger', timeout: 4000});\n    }else{\n      this.invoice.listItemArray.forEach( item => {\n        if(item.itemId === this.listItem.itemId){\n          this.duplicateFound = true;\n        }\n      });\n      if(this.duplicateFound){\n        this.flashMessage.showFlashMessage({messages: [\"Duplicate item.\"], type: 'danger', timeout: 4000});\n      }else{\n        this.invoice.listItemArray.push(this.listItem);\n        this.flashMessage.showFlashMessage({messages: [\"Item added successfully.\"], type: 'success', timeout: 4000});\n        // clear the list item\n        this.listItem = {\n          itemId : '',\n          quantity : 0,\n        }\n      } \n    }\n\n  }\n\n  deleteItem(id : string){\n    if(confirm(\"Are you sure?\")){\n      this.indexToDelete = this.invoice.listItemArray.findIndex(itemToDelete => itemToDelete.itemId == id);\n      this.invoice.listItemArray.splice(this.indexToDelete, 1);\n      this.flashMessage.showFlashMessage({messages :[\"Item removed.\"], type: 'success', timeout: 4000});\n    }\n  }\n\n  editItem(listItem: ListItem){\n\n    this.listItemToEdit = {...listItem};\n    this.items.map(item => {\n      if(item.id == listItem.itemId){\n        this.itemNameToEdit = item.itemName;\n      }\n    })\n  }\n\n  updateItem(){\n\n    var {quantity, itemId} = this.listItemToEdit;\n\n    if(!quantity || quantity < 1){\n      this.flashMessage.showFlashMessage({messages: [\"Please enter a valid quantity\"], type: 'danger', timeout:4000});\n    }else{\n      this.invoice.listItemArray.map( listItem => {\n        if(listItem.itemId == itemId){\n          listItem.quantity = quantity;\n        }\n      })\n    }\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n    <nav aria-label=\\\"breadcrumb\\\">\\n        <ol class=\\\"breadcrumb\\\">\\n            <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/products\\\">Products</a></li>\\n            <li class=\\\"breadcrumb-item active\\\">Add Product</li>\\n        </ol>\\n    </nav>\\n\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          Add Product\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form #productForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(productForm)\\\" >\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"image\\\">Upload Image</label>\\n                <input \\n                    type=\\\"file\\\" \\n                    name=\\\"image\\\" \\n                    id=\\\"image\\\" \\n                    class=\\\"form-control-file\\\"\\n                    (change)=\\\"uploadFile($event)\\\"\\n                    accept=\\\".png,.jpg\\\"\\n                    >\\n                    <div *ngIf=\\\"uploadPercent | async as pct\\\">\\n                        <progress  style=\\\"width: 50%\\\" max=\\\"100\\\" [value]=\\\"pct\\\" ></progress>\\n                    </div>\\n                    \\n                    <div class=\\\"result\\\" *ngIf=\\\"downloadURL | async let uploadSRC\\\">\\n                        <!-- Display image after upload:\\n                            TO DO: how to inform stop client from going to other page when the upload is not yet done\\n                        -->\\n                        <div class=\\\"col-md-4\\\">\\n                            <div class=\\\"thumbnail\\\">\\n                                <img src=\\\"{{uploadSRC}}\\\" style=\\\"width:100%\\\">\\n                            </div>\\n                        </div>\\n                    </div>   \\n            </div>\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"itemName\\\">Item Name: </label>\\n                  <input \\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    name=\\\"itemName\\\"\\n                    id=\\\"itemName\\\"\\n                    #itemName = \\\"ngModel\\\"\\n                    [ngClass]=\\\"{'is-invalid': itemName.errors && itemName.touched}\\\"\\n                    [(ngModel)]=\\\"itemToAdd.itemName\\\"\\n                    value=\\\"itemName\\\"\\n                    required\\n                    minlength=\\\"2\\\"\\n                    >\\n                    <div [hidden]=\\\"!itemName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                        Item name required\\n                    </div>\\n                    <div [hidden]=\\\"!itemName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                        Must be at least 2 characters\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"itemDesc\\\">Description: </label>\\n                    <input \\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      name=\\\"itemDesc\\\"\\n                      id=\\\"itemDesc\\\"\\n                      [(ngModel)]=\\\"itemToAdd.itemDesc\\\"\\n                      >\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"unitPriceAed\\\">Price AED</label>\\n                      <input \\n                        type=\\\"number\\\" \\n                        id=\\\"unitPriceAed\\\" \\n                        class=\\\"form-control\\\" \\n                        name=\\\"unitPriceAed\\\" \\n                        #unitPriceAed=\\\"ngModel\\\"\\n                        [(ngModel)] = \\\"itemToAdd.unitPriceAed\\\"\\n                        [ngClass]=\\\"{'is-invalid': unitPriceAed.errors && unitPriceAed.touched}\\\"\\n                        required\\n                        >\\n                        <div [hidden]=\\\"!unitPriceAed.errors?.required && unitPriceAed.value > 0\\\" class=\\\"invalid-feedback\\\">\\n                            Price is required\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"unitPricePhp\\\">Price PHP</label>\\n                        <input \\n                          type=\\\"number\\\" \\n                          id=\\\"unitPricePhp\\\" \\n                          class=\\\"form-control\\\" \\n                          name=\\\"unitPricePhp\\\" \\n                          #unitPricePhp=\\\"ngModel\\\"\\n                          [ngClass]=\\\"{'is-invalid': unitPricePhp.errors && unitPricePhp.touched}\\\"\\n                          [(ngModel)] = \\\"itemToAdd.unitPricePhp\\\"\\n                          required\\n                          >\\n                          <div [hidden]=\\\"!unitPricePhp.errors?.required && unitPricePhp.value > 0\\\" class=\\\"invalid-feedback\\\">\\n                              Price is required\\n                          </div>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"stockStatus\\\">Stock Status</label>\\n                        <select \\n                            name=\\\"stockStatus\\\" \\n                            id=\\\"stockStatus\\\"\\n                            class=\\\"form-control\\\"\\n                            #stockStatus=\\\"ngModel\\\"\\n                            [(ngModel)]=\\\"itemToAdd.stockStatus\\\"\\n                            required\\n                          > \\n                            <option value=\\\"\\\">Select Status</option>\\n                            <option value=\\\"IN STOCK\\\">In Stock</option>\\n                            <option value=\\\"OUT OF STOCK\\\">Out of Stock</option>\\n                        </select>\\n                        <div [hidden]=\\\"!stockStatus.invalid\\\" class=\\\"text-danger\\\">\\n                            <small>Status required</small>  \\n                        </div>\\n                      </div>\\n            <input [disabled]=\\\"productForm.invalid\\\" type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary btn-block\\\">\\n          </form>\\n        </div>\\n      </div>\\n\\n</div>\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {Location} from '@angular/common';\n\nimport {Item} from '../../models/item';\nimport {ItemService} from '../../service/item.service';\n\nimport { NgFlashMessageService } from 'ng-flash-messages';\n\nimport {finalize} from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport {AngularFireStorage} from '@angular/fire/storage';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.scss']\n})\nexport class AddProductComponent implements OnInit {\n\n  itemToAdd: Item = {\n    id: '',\n    itemName : '',\n    itemDesc : '',\n    unitPriceAed : 0,\n    unitPricePhp : 0,\n    stockStatus : '',\n    imagePath: '',\n  }\n\n  uploadPercent: Observable<number>;\n  downloadURL: Observable<string>;\n\n\n  constructor(\n    private itemService: ItemService,\n    private flashMessage: NgFlashMessageService,\n    private storage: AngularFireStorage,\n    private router: Router,\n    private route: ActivatedRoute,\n    private location: Location  \n  ) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit({value, valid} : {value: Item, valid: boolean}){\n    if(!valid || !value.itemName.trim() || value.unitPriceAed < 1 || value.unitPricePhp < 1){\n        this.flashMessage.showFlashMessage({messages:['Please fill-out the form correctly'], type:'danger', timeout: 4000});\n    }else{\n        if(this.itemToAdd.imagePath){\n          value.imagePath = this.itemToAdd.imagePath;\n        }\n        this.itemService.addItem(value);\n        this.flashMessage.showFlashMessage({messages:['Item added successfully.'], type:'success', timeout: 4000});\n        //reset values after add\n        this.itemToAdd.itemName = '';\n        this.itemToAdd.itemDesc = '';\n        this.itemToAdd.unitPriceAed = 0;\n        this.itemToAdd.unitPricePhp = 0;\n        this.itemToAdd.stockStatus = '';\n        this.location.back();\n      }\n  }\n\n  uploadFile(event){\n    const file = event.target.files[0];\n\n    const filePath = `image/${new Date().getTime()}_${file.name}`;\n    \n    this.itemToAdd.imagePath = filePath;\n\n    const fileRef = this.storage.ref(filePath);\n    const task = this.storage.upload(filePath, file);\n    \n    // TO DO : add a code to check set temp value if empty\n    \n     \n\n    //observe percentage changes\n    this.uploadPercent = task.percentageChanges();\n    //get notified when the download URL is available\n    task.snapshotChanges().pipe(\n      finalize(() => this.downloadURL = fileRef.getDownloadURL())\n    )\n    .subscribe()\n  }\n\n  goBack(){\n    this.location.back();\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <a routerLink=\\\"/customers\\\" type=\\\"button\\\" class=\\\"btn btn-elegant\\\"> <i class=\\\"fa fa-arrow-circle-left\\\"></i>\\n                        Back\\n                      </a>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"btn-group pull-right\\\">\\n                    <a routerLink=\\\"/customer/edit/{{id}}\\\" class=\\\"btn btn-dark\\\">Edit</a>\\n                    <button  type=\\\"button\\\" (click)=\\\"onDeleteClick()\\\" class=\\\"btn btn-danger\\\" >Delete</button>\\n                    </div>\\n                </div>\\n            </div>\\n            <hr>\\n            <app-loading-spinner *ngIf=\\\"showSpinner\\\"></app-loading-spinner>\\n            <div *ngIf=\\\"customer\\\" class=\\\"card w-70 mx-auto\\\">\\n                <div class=\\\"card-header\\\">\\n                  <h3>{{customer.firstName + ' ' +  customer.lastName | titlecase }}</h3> \\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-4\\\">Email:</div>\\n                        <div class=\\\"col-sm-8\\\">{{customer.email}}</div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-4\\\">Contact Number:</div>\\n                            <div class=\\\"col-sm-8\\\">{{customer.contactNumber}}</div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-4\\\">Address:</div>\\n                            <div class=\\\"col-sm-8\\\">{{customer.address.line1}}</div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-4\\\">City:</div>\\n                            <div class=\\\"col-sm-8\\\">{{customer.address.city}}</div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-4\\\">Country:</div>\\n                            <div class=\\\"col-sm-8\\\">{{customer.address.country}}</div>\\n                        </div>\\n                   \\n                    <!-- <ul class=\\\"list-group\\\">\\n                        <li class=\\\"list-group-item\\\">Email: {{customer.email}} </li>\\n                        <div class=\\\"li list-group-item\\\"> Contact Number: {{customer.contactNumber}}  </div>\\n                        <div class=\\\"li list-group-item\\\"> Address: {{customer.address.line1}} </div>\\n                        <div class=\\\"li list-group-item\\\">City: {{customer.address.city}} </div>\\n                        <div class=\\\"li list-group-item\\\"> Country: {{customer.address.country}} </div>\\n                    </ul> -->\\n                </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\nimport { map } from 'rxjs/operators';\n\nimport {Customer} from '../../models/customer';\nimport {Invoice} from '../../models/Invoice';\n\nimport {CustomerService} from '../../service/customer.service';\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport { InvoiceService } from '../../service/invoice.service';\n\n\n@Component({\n  selector: 'app-customer-details',\n  templateUrl: './customer-details.component.html',\n  styleUrls: ['./customer-details.component.css']\n})\nexport class CustomerDetailsComponent implements OnInit {\n  id : string;\n  customer: Customer = {\n    id : '',\n    firstName: '',\n    lastName : '',\n    email : '',\n    contactNumber: '',\n    address : {\n      line1 : '',\n      city : '',\n      country : ''\n    } \n  }\n\n  invoices: Invoice[];\n  invoiceExist: boolean = false;\n  showSpinner : boolean = true;\n\n  constructor(\n    private customerService: CustomerService,\n    private flashMessage: NgFlashMessageService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private invoiceService: InvoiceService\n  ) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.customerService.getCustomer(this.id).subscribe(customer => {\n        this.customer = customer;\n        this.showSpinner = false;\n    });\n    this.invoiceService.getInvoices().subscribe(invoices => this.invoices = invoices);\n  }\n\n  checkIfInvoiceExist() {\n    if(this.invoices){\n      this.invoices.map(invoices => {\n        if(invoices.customerId == this.id){\n          this.invoiceExist = true;\n        }  \n      });\n    }\n  }\n\n  onDeleteClick(){\n    this.checkIfInvoiceExist();\n    if(this.invoiceExist){\n      this.flashMessage.showFlashMessage({messages:['Cannot remove customer. An invoice exist under this customer.'], type:'danger', timeout: 4000});\n    }else{\n      if(confirm(\"Are you sure?\")){\n        this.customerService.deleteCustomer(this.id);\n        console.log(\"onDeleteClick: \", this.customer);\n        this.flashMessage.showFlashMessage({messages:['Customer removed.'], type:'success', timeout: 4000});\n        this.router.navigate(['/customers']);\n      }\n    }\n  }\n\n}\n","module.exports = \".fa-pencil-square-o, .fa-trash-o {\\n    color: black;\\n}\\n\\n#newButton {\\n    background-color: #ff9966;\\n}\\n\\na:hover { \\n    color: #ffcccc;\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9\\\">\\n      <h2> Customers</h2>\\n  </div>\\n  <div class=\\\"col-md-3\\\">\\n    <a routerLink=\\\"/customer/add\\\" class=\\\"btn float-right\\\" id=\\\"newButton\\\"><i class=\\\"fa fa-plus\\\"></i> New Customer</a>\\n  </div>\\n</div>\\n<br>\\n<app-loading-spinner *ngIf=\\\"showSpinner\\\"></app-loading-spinner>\\n<div class=\\\"table-responsive\\\">\\n  <table *ngIf=\\\"customers?.length > 0\\\" datatable [dtOptions]=\\\"dtOptions\\\" class=\\\"row-border hover\\\">\\n    <thead>\\n      <tr>\\n        <th>Customer Name</th>\\n        <th>Email</th>\\n        <th>Contact Number</th>\\n        <th>Country</th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let customer of customers\\\">\\n        <td>{{customer.firstName}} {{customer.lastName}} </td>\\n        <td> {{customer.email}} </td>\\n        <td> {{customer.contactNumber}} </td>\\n        <td> {{customer.address.country}} </td>\\n        <td class=\\\"pull-right\\\"><a routerLink=\\\"/customer/{{ customer.id }}\\\"> <i class=\\\"fa fa-angle-right fa-2x grey-text\\\"></i> </a></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {CustomerService} from '../../service/customer.service';\nimport {Customer} from '../../models/customer';\n\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n  customers: Customer[];\n  showSpinner : boolean = true;\n\n  dtOptions : DataTables.Settings = {};\n\n  constructor(\n    private customerService: CustomerService,\n    ) { }\n\n  ngOnInit() {\n    this.customerService.getCustomers().subscribe(customers => {\n      this.customers = customers;\n      this.showSpinner = false;\n    });\n    this.dtOptions = {\n      pagingType : 'full_numbers'\n    }\n  }\n\n  \n\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <!-- <a routerLink=\\\"/customers\\\" class=\\\"btn btn-link\\\"><i class=\\\"fa fa-arrow-circle-o-left\\\"></i> Back to Dashboard</a> -->\\n     \\n      <a routerLink=\\\"/customer/{{id}}\\\" type=\\\"button\\\" class=\\\"btn btn-elegant\\\"> <i class=\\\"fa fa-arrow-circle-left\\\"></i>\\n        Back\\n      </a>\\n    \\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n  \\n    </div>\\n  </div>\\n\\n  <br>\\n\\n  \\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Edit Client\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <form #customerForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(customerForm)\\\" >\\n        <!-----------First Name--------------->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"firstName\\\">First Name </label>\\n          <input \\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            name=\\\"firstName\\\"\\n            #customerFirstName=\\\"ngModel\\\"\\n            [ngClass] = \\\"{'is-invalid': customerFirstName.errors && customerFirstName.touched}\\\"\\n            [(ngModel)]=\\\"customer.firstName\\\"\\n            minlength=\\\"2\\\"\\n            required\\n          >\\n          <div [hidden]=\\\"!customerFirstName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n            First name required\\n          </div>\\n          <div [hidden]=\\\"!customerFirstName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n             Must be at least 2 characters\\n          </div>\\n        </div>\\n        <!-----------Last Name--------------->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"lastName\\\">Last Name</label>\\n          <input \\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            name=\\\"lastName\\\"\\n            #customerLastName = \\\"ngModel\\\"\\n            [(ngModel)] = \\\"customer.lastName\\\"\\n            [ngClass]=\\\"{'is-invalid': customerLastName.errors && customerLastName.touched}\\\"\\n            minlength=\\\"2\\\"\\n            required\\n          >\\n          <div [hidden]=\\\"!customerLastName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n            Last name required\\n          </div>\\n          <div [hidden]=\\\"!customerLastName.errors?.minlength\\\" class=\\\"invalid-feedback\\\" >\\n            Must be at least 2 characters\\n          </div>\\n        </div>\\n        <!---------------Email--------------->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input \\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            name=\\\"email\\\"\\n            #customerEmail = \\\"ngModel\\\"\\n            [(ngModel)] = \\\"customer.email\\\"\\n            [ngClass]=\\\"{'is-invalid': customerEmail.errors && customerEmail.touched}\\\"\\n            pattern =\\\"^[\\\\w]{1,}[\\\\w.+-]{0,}@[\\\\w-]{2,}([.][a-zA-Z]{2,}|[.][\\\\w-]{2,}[.][a-zA-Z]{2,})$\\\"\\n            required\\n            >\\n            <div [hidden]=\\\"!customerEmail.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n              Email required\\n            </div>\\n            <div [hidden]=\\\"!customerEmail.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n              Email is invalid\\n            </div>\\n        </div>\\n        <!---------------Contact Number--------------->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"contactNumber\\\">Contact Number</label>\\n          <input \\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            name=\\\"contactNumber\\\"          \\n            #customerContactNumber = \\\"ngModel\\\"\\n            [(ngModel)]=\\\"customer.contactNumber\\\"\\n            [ngClass]=\\\"{'is-invalid': customerContactNumber.errors && customerContactNumber.touched}\\\"\\n            minlength = \\\"10\\\"\\n            required\\n            >\\n            <div [hidden]=\\\"!customerContactNumber.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n              Contact number required\\n            </div>\\n            <div [hidden]=\\\"!customerContactNumber.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n              Must be at least 10 characters\\n            </div>\\n        </div>\\n        <!---------------Address--------------->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"addressLine1\\\">Street, Building, Area</label>\\n          <input \\n            type=\\\"text\\\"\\n            name=\\\"line1\\\"\\n            class=\\\"form-control\\\"\\n            #customerAddressLine1 = \\\"ngModel\\\"\\n            [(ngModel)]=\\\"customer.address.line1\\\"\\n            [ngClass]=\\\"{'is-invalid': customerAddressLine1.errors && customerAddressLine1.touched}\\\"\\n            minlength=\\\"2\\\"\\n            required\\n            >\\n            <div [hidden]=\\\"!customerAddressLine1.errors?.required\\\" class=\\\"invalid-feedback\\\">   \\n                Street, Building, Area is required\\n            </div>\\n            <div [hidden]=\\\"!customerAddressLine1.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n              Must be at least 2 characters\\n            </div>\\n            <label for=\\\"city\\\">City</label>\\n            <input \\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                name=\\\"city\\\"\\n                #customerCity = \\\"ngModel\\\"\\n                [(ngModel)]=\\\"customer.address.city\\\"\\n                [ngClass]=\\\"{'is-invalid': customerCity.errors && customerCity.touched }\\\"\\n                minlength=\\\"2\\\"\\n                required\\n              >\\n              <div [hidden]=\\\"!customerCity.errors?.required\\\" class=\\\"invalid-feedback\\\" >\\n                City is required\\n              </div>\\n              <div [hidden]=\\\"!customerCity.errors?.minlength\\\" class=\\\"invalid-feedback\\\" > \\n                Must be at least 2 characters\\n              </div>\\n              <label for=\\\"country\\\">Country</label>\\n              <select name=\\\"country\\\" id=\\\"country\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"customer.address.country\\\" >\\n                <option value=\\\"United Arab Emirates\\\">United Arab Emirates</option>\\n                <option value=\\\"Philippines\\\">Philippines</option>\\n                <option value=\\\"others\\\">Others</option>\\n              </select>\\n        </div>\\n        <input [disabled]=\\\"customerForm.invalid\\\" type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary btn-block\\\">\\n      </form>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {Location} from '@angular/common';\n\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport { CustomerService } from '../../service/customer.service';\n\nimport { Customer} from '../../models/customer';\n\n@Component({\n  selector: 'app-edit-customer',\n  templateUrl: './edit-customer.component.html',\n  styleUrls: ['./edit-customer.component.css']\n})\nexport class EditCustomerComponent implements OnInit {\n  id: string;\n  customer : Customer = {\n    firstName : '',\n    lastName :'',\n    email : '',\n    contactNumber : '',\n    address : { \n        line1 : '',\n        city: '',\n        country: ''\n    }\n  }\n\n  address\n\n  constructor(\n    private flashMessage: NgFlashMessageService,\n    private customerService: CustomerService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private location: Location    \n  ) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.customerService.getCustomer(this.id).subscribe(customer => this.customer = customer);\n  }\n\n  onSubmit({value, valid} : {value: Customer, valid: boolean}){ //for now there's no use for VALUE (will check later)\n  if(!valid){\n    //show error\n    this.flashMessage.showFlashMessage({messages: [\"Please fill out the form correctly\"], type: 'danger', timeout: 4000});\n  }else{\n    this.customer.id = this.id;\n    this.customerService.updateCustomer(this.customer);\n    this.flashMessage.showFlashMessage({messages:[\"Customer updated successfully\"], type: 'success', timeout: 4000});\n    // this.router.navigate(['/customers']);\n    this.location.back();\n  }\n}\n\ngoBack(): void{\n  this.location.back();\n}\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <a routerLink=\\\"/order/{{id}}\\\" type=\\\"button\\\" class=\\\"btn btn-elegant\\\"> <i class=\\\"fa fa-arrow-circle-left\\\"></i>\\n            Back\\n          </a>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n        </div>\\n      </div>\\n      <br>\\n      <div>\\n          <h2> Edit Invoice </h2>\\n      </div>\\n      <br>\\n\\n      <div>\\n          <form #invoiceForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(invoiceForm)\\\">\\n              <div class=\\\"card\\\">\\n                  <div class=\\\"card-header\\\">\\n                      Edit Details\\n                  </div>\\n                  <div class=\\\"card-body\\\">\\n                    <!-- Edit Status-->\\n                      <div class=\\\"form-group row\\\">\\n                            <label for=\\\"status\\\" class=\\\"col-md-2 col-form-label\\\">Status</label>\\n                            <div class=\\\"col-md-10\\\">\\n                                <select \\n                                    name=\\\"status\\\" \\n                                    id=\\\"status\\\" \\n                                    class=\\\"form-control\\\"\\n                                    #status = \\\"ngModel\\\"\\n                                    [(ngModel)]=\\\"invoice.status\\\"\\n                                  >\\n                                  <option value=\\\"Pending\\\">Pending</option>\\n                                  <option value=\\\"Delivered\\\">Delivered</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                        <!-- Edit Customer Names-->\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"customerId\\\" class=\\\"col-md-2 col-form-label\\\">Customer</label>\\n                            <div class=\\\"col-md-10\\\">\\n                                <select \\n                                    name=\\\"customerId\\\" \\n                                    id=\\\"customerId\\\" \\n                                    class=\\\"form-control\\\" \\n                                    #customerId = \\\"ngModel\\\"\\n                                    [(ngModel)]=\\\"invoice.customerId\\\"\\n                                    >\\n                                        <option *ngFor=\\\"let customer of customers\\\"  value=\\\"{{customer.id}}\\\"> {{customer.firstName | titlecase }} {{customer.lastName | titlecase}} </option>\\n                                </select>\\n                            </div>  \\n                        </div> \\n                        <!-- Delivery Option-->\\n                        <div class=\\\"form-group row\\\">\\n                          <label for=\\\"deliveryOption\\\" class=\\\"col-md-2 col-form-label\\\">Delivery Option</label>\\n                          <div class=\\\"col-md-10 \\\">\\n                              <select \\n                                  name=\\\"deliveryOption\\\" \\n                                  id=\\\"deliveryOption\\\" \\n                                  class=\\\"form-control\\\"\\n                                  [(ngModel)]=\\\"invoice.deliveryOption\\\"\\n                                  #deliveryOption = \\\"ngModel\\\"\\n                                >\\n                                  <option value=\\\"Meet-up\\\">Meet-up</option>\\n                                  <option value=\\\"Shipment\\\">Shipment</option>\\n                                </select>\\n                          </div>\\n                        </div>\\n                        <!--Freight Cost-->\\n                        <div *ngIf=\\\"invoice.deliveryOption === 'Shipment'\\\" class=\\\"form-group row\\\">\\n                          <label for=\\\"freight\\\" class=\\\"col-md-2 col-form-label\\\">Freight</label>\\n                          <div class=\\\"col-md-10\\\">\\n                              <input \\n                                  type=\\\"number\\\"\\n                                  class=\\\"form-control\\\"\\n                                  name=\\\"freight\\\"\\n                                  #freight = \\\"ngModel\\\"\\n                                  [(ngModel)]= \\\"invoice.freight\\\"\\n                              >\\n                          </div>\\n                        </div>\\n                          <!--Discount-->\\n                          <div class=\\\"form-group row\\\">\\n                              <label for=\\\"discount\\\" class=\\\"col-md-2 col-form-label\\\">Discount</label>\\n                              <div class=\\\"col-md-10\\\">\\n                                  <input \\n                                    type=\\\"number\\\"\\n                                    class=\\\"form-control\\\"\\n                                    name=\\\"discount\\\"\\n                                    #discount = \\\"ngModel\\\"\\n                                    [(ngModel)] = \\\"invoice.discount\\\"\\n                                  >\\n                              </div>\\n                          </div> \\n                          <!--Remarks-->\\n                          <div class=\\\"form-group row\\\">\\n                              <label for=\\\"remarks\\\" class=\\\"col-md-2 col-form-label\\\">Remarks</label>\\n                            <div class=\\\"col-md-10\\\">\\n                                <textarea\\n                                  class=\\\"form-control rounded-0 \\\"\\n                                  name = \\\"remarks\\\"\\n                                  #remarks = \\\"ngModel\\\"\\n                                  [(ngModel)]=\\\"invoice.remarks\\\"\\n                                  rows=\\\"5\\\">\\n                              </textarea>\\n                            </div>\\n                          </div>\\n                  </div> \\n              </div> <!--end of Edit Details card-->\\n\\n              <br> \\n\\n              <!-- Add Item Card-->\\n              <div class=\\\"card\\\">\\n                  <div class=\\\"card-header\\\">\\n                    Edit Item\\n                  </div>\\n                  <div class=\\\"card-body\\\">\\n                      <a  data-toggle=\\\"modal\\\" data-target=\\\"#addItemModal\\\">\\n                          <i class=\\\"fa fa-plus text-primary\\\"> Add Items</i>\\n                      </a>\\n                  </div>\\n                  <!--Display Items-->\\n                 <div *ngIf=\\\"invoice.listItemArray.length > 0\\\" class=\\\"m-md-4\\\">\\n                    <table class=\\\"table table-hover table-fixed table-responsive\\\">\\n                      <thead>\\n                        <th>Name</th>\\n                        <th>Price</th>\\n                        <th>Quantity</th>\\n                        <th>Description</th>\\n                        <th>Line Total</th>\\n                        <th></th>\\n                      </thead>\\n                      <tbody>\\n                        <tr *ngFor=\\\"let itemToDisplay of invoice.listItemArray\\\" >\\n                          <td>\\n                              {{getItemDetails(itemToDisplay.itemId)}}\\n                              {{displayItem.itemName}}\\n                          </td>\\n                          <td>\\n                            {{displayItem.unitPriceAed | currency: \\\"AED\\\"}}</td>\\n                          <td > \\n                            {{itemToDisplay.quantity}} \\n                          </td>\\n                          \\n                          <td> {{displayItem.itemDesc}} </td>\\n                          <td> {{itemToDisplay.quantity * displayItem.unitPriceAed}} </td>\\n                            <td class=\\\"pull-right\\\"> \\n                                <a class=\\\"px-2 text-primary\\\" (click)=\\\"editItem(itemToDisplay)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editItemModal\\\" > <i class=\\\"fa fa-edit fa-2x\\\"></i> </a>\\n                                <a class=\\\"px-2 text-danger\\\" (click)=\\\"deleteItem(itemToDisplay.itemId)\\\" > <i class=\\\"fa fa-trash fa-2x\\\"></i> </a>\\n                          </td>\\n                        </tr>\\n                      </tbody>\\n                    </table>\\n                  </div>\\n              </div><!-- end of Add item card-->\\n              \\n               <!--  Modal Add Item-->\\n                <div class=\\\"modal fade\\\" id=\\\"addItemModal\\\">\\n                  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n                    <div class=\\\"modal-content\\\">\\n                      <div class=\\\"modal-header\\\">\\n                        <h5 class=\\\"modal-title\\\" id=\\\"addItemModalTitle\\\">\\n                          Add Item\\n                        </h5>\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-lable=\\\"Close\\\">\\n                          <span aria-hidden=\\\"true\\\">&times;</span>\\n                        </button>\\n                      </div>\\n                      <div class=\\\"modal-body\\\">\\n                        <form>\\n                          <div class=\\\"form-group\\\">\\n                            <label for=\\\"itemName\\\">Item Name</label>\\n                            <select \\n                              name=\\\"itemName\\\" \\n                              class=\\\"form-control\\\"\\n                              id=\\\"itemName\\\"\\n                              #itemName = \\\"ngModel\\\"\\n                              [(ngModel)]=\\\"listItem.itemId\\\"\\n                            >\\n                              <option value=\\\"\\\">Select Item</option>\\n                              <option *ngFor=\\\"let item of items\\\" value=\\\"{{item.id}}\\\"> {{item.itemName}} </option>\\n                            </select>\\n                          </div>\\n                          <div class=\\\"form-group\\\">\\n                            <label for=\\\"quantity\\\">Quantity</label>\\n                            <input \\n                              type=\\\"number\\\" \\n                              id=\\\"quantity\\\" \\n                              class=\\\"form-control\\\" \\n                              name=\\\"quantity\\\" \\n                              #quantity=\\\"ngModel\\\"\\n                              [ngClass]=\\\"{'is-invalid': quantity.errors && quantity.touched}\\\"\\n                              [(ngModel)] = \\\"listItem.quantity\\\"\\n                              required\\n                              >\\n                              <div [hidden]=\\\"!quantity.errors?.required && quantity.value > 0 \\\" class=\\\"invalid-feedback\\\">\\n                                Please enter a valid quantity\\n                              </div>\\n                          </div>\\n                          \\n                        </form>\\n                      </div>\\n                      <div class=\\\"modal-footer\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addItem()\\\" data-dismiss=\\\"modal\\\">Save</button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                 <!-- Modal to Edit Item -->\\n                  <div class=\\\"modal fade\\\" id=\\\"editItemModal\\\" >\\n                      <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n                        <div class=\\\"modal-content\\\">\\n                          <div class=\\\"modal-header\\\">\\n                              <h5 class=\\\"modal-title\\\" id=\\\"editItemModalTitle\\\">\\n                                  Edit Item \\n                                </h5>\\n                                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-lable=\\\"Close\\\">\\n                                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                                </button>\\n                          </div>\\n                          <div class=\\\"modal-body\\\">\\n                            <form>\\n                              <div class=\\\"form-group\\\">\\n                                <label for=\\\"itemName\\\">Item Name: </label>\\n                                <input \\n                                  readonly\\n                                  type=\\\"text\\\"\\n                                  class=\\\"form-control form-control-plaintext\\\"\\n                                  name=\\\"itemName\\\"\\n                                  id=\\\"itemName\\\"\\n                                  [(ngModel)]=\\\"itemNameToEdit\\\"\\n                                  value=\\\"itemNameToEdit\\\"\\n                                  >\\n                              </div>\\n                              <div class=\\\"form-group\\\">\\n                                <label for=\\\"quantity\\\">Quantity</label>\\n                                <input \\n                                  type=\\\"number\\\"\\n                                  class=\\\"form-control\\\"\\n                                  name=\\\"quantity\\\"\\n                                  id=\\\"quantity\\\"\\n                                  value=\\\"quantity\\\"\\n                                  #quantity = \\\"ngModel\\\"\\n                                  [ngClass]=\\\"{'is-invalid': quantity.errors && quantity.touched}\\\"\\n                                  [(ngModel)]=\\\"listItemToEdit.quantity\\\"\\n                                  required\\n                                  >\\n                                  <div [hidden]=\\\"!quantity.errors?.required && quantity.value > 0\\\" class=\\\"invalid-feedback\\\">\\n                                      Please enter a valid quantity\\n                                  </div>\\n                              </div>\\n                            </form>\\n                          </div>\\n                          <div class=\\\"modal-footer\\\">\\n                              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateItem()\\\" data-dismiss=\\\"modal\\\">Update</button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                  </div> \\n                \\n                  <br>\\n\\n                  <!-- Record Payment Card-->\\n                  <div class=\\\"card\\\">\\n                      <div class=\\\"card-header\\\">\\n                          Record Payment\\n                      </div>\\n                      <div class=\\\"card-body\\\">\\n                          <a  data-toggle=\\\"modal\\\" data-target=\\\"#recordPayment\\\">\\n                              <i class=\\\"fa fa-plus text-primary\\\"> Record Payment </i>\\n                          </a>\\n                          <!-- Display Payment Details-->\\n                          <div *ngIf=\\\"invoice.payments.length > 0\\\" class=\\\"m-md-4\\\">\\n                            <table class=\\\"table table-hover table-fixed table-responsive\\\" >\\n                              <thead>\\n                                <th>Date Paid</th>\\n                                <th>Method</th>\\n                                <th>Amount</th>\\n                                <th></th>\\n                              </thead>\\n                              <tbody>\\n                                <tr *ngFor=\\\"let payment of invoice.payments\\\" >\\n                                  <td> {{ payment.datePaid | date }} </td>\\n                                  <td> {{payment.method}} </td>\\n                                  <td> {{payment.amount}} </td>\\n                                  <td class=\\\"pull-right\\\">\\n                                          <a class=\\\"px-2 text-primary\\\" (click)=\\\"editPayment(payment)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editPaymentModal\\\" > <i class=\\\"fa fa-edit fa-2x\\\"></i> </a>\\n                                          <a class=\\\"px-2 text-danger\\\" (click)=\\\"deletePayment(payment)\\\" > <i class=\\\"fa fa-trash fa-2x\\\"></i> </a>\\n                                  </td>\\n                                </tr>\\n                              </tbody>\\n                            </table>\\n                          </div>\\n                      </div>\\n                  </div>\\n\\n                  <!-- Modal for Record Payment --->\\n                  <div class=\\\"modal fade\\\" id=\\\"recordPayment\\\">\\n                    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n                      <div class=\\\"modal-content\\\">\\n                        <div class=\\\"modal-header\\\">\\n                            <h5 class=\\\"modal-title\\\" id=\\\"addItemModalTitle\\\">\\n                                Record Payment\\n                            </h5>\\n                          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-lable=\\\"Close\\\">\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                          </button>\\n                        </div>\\n                        <div class=\\\"modal-body\\\">\\n                        <div>\\n                            {{getBalance()}} \\n                          <h5>\\n                              Balance: <span class=\\\"text-danger\\\"> {{balanceAed}} </span>\\n                          </h5>\\n                        </div>\\n                          <form>\\n                            <div class=\\\"form-group\\\">\\n                              <label for=\\\"amount\\\">Amount</label>\\n                              <input \\n                                type=\\\"number\\\" \\n                                id=\\\"amount\\\" \\n                                class=\\\"form-control\\\" \\n                                name=\\\"amount\\\" \\n                                #amount=\\\"ngModel\\\"\\n                                [ngClass]=\\\"{'is-invalid': amount.errors && amount.touched}\\\"\\n                                [(ngModel)] = \\\"payment.amount\\\"\\n                                required\\n                                >\\n                                <div [hidden]=\\\"!amount.errors?.required && amount.value > 0\\\" class=\\\"invalid-feedback\\\">\\n                                  Please enter a valid amount\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                              <label for=\\\"method\\\">Method</label>\\n                              <input \\n                                type=\\\"text\\\"\\n                                id=\\\"method\\\"\\n                                name=\\\"method\\\"\\n                                class=\\\"form-control\\\"\\n                                #method = \\\"ngModel\\\"\\n                                [ngClass]=\\\"{'is-invalid': method.errors && method.touched}\\\"\\n                                [(ngModel)]=\\\"payment.method\\\"\\n                                required\\n                                minlength=\\\"2\\\"\\n                                >\\n                            </div>\\n                            <div [hidden]=\\\"!method.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                              Please enter a valid method\\n                            </div>\\n                            <div [hidden]=\\\"!method.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                                Must be at least 2 characters\\n                              </div>\\n                          </form>\\n                        </div>\\n                        <div class=\\\"modal-footer\\\">\\n                          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addPayment()\\\" data-dismiss=\\\"modal\\\">Save</button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n\\n                   <!--Payment To Edit Modal-->\\n                    <div class=\\\"modal fade\\\" id=\\\"editPaymentModal\\\" >\\n                        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n                          <div class=\\\"modal-content\\\">\\n                            <div class=\\\"modal-header\\\">\\n                                <h5 class=\\\"modal-title\\\" id=\\\"editPaymentModalTitle\\\">\\n                                    Edit Payment \\n                                  </h5>\\n                                  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-lable=\\\"Close\\\">\\n                                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                                  </button>\\n                            </div>\\n                            <div class=\\\"modal-body\\\">\\n                              <form>\\n                                <div class=\\\"form-group\\\">\\n                                  <label for=\\\"datePaid\\\">Date Paid: </label>\\n                                  {{paymentToEdit.datePaid | date}}\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"amount\\\">Amount</label>\\n                                    <input \\n                                      type=\\\"number\\\"\\n                                      class=\\\"form-control\\\"\\n                                      name=\\\"amount\\\"\\n                                      id=\\\"amount\\\"\\n                                      value=\\\"amount\\\"\\n                                      [(ngModel)]=\\\"paymentToEdit.amount\\\"\\n                                      #amount = \\\"ngModel\\\"\\n                                      [ngClass]=\\\"{'is-invalid': amount.errors && amount.touched}\\\"\\n                                      required\\n                                      >\\n                                      <div [hidden]=\\\"!amount.errors?.required && amount.value > 0 \\\"  class=\\\"invalid-feedback\\\">\\n                                          <small>Please enter a valid amount</small>\\n                                      </div>\\n                                  </div>\\n                                  <div class=\\\"form-group\\\">\\n                                      <label for=\\\"method\\\">Method</label>\\n                                      <input \\n                                        type=\\\"text\\\"\\n                                        class=\\\"form-control\\\"\\n                                        name=\\\"method\\\"\\n                                        id=\\\"method\\\"\\n                                        value=\\\"method\\\"\\n                                        [(ngModel)]=\\\"paymentToEdit.method\\\"\\n                                        #method = \\\"ngModel\\\"\\n                                        [ngClass]=\\\"{'is-invalid': method.errors && method.touched}\\\"\\n                                        required\\n                                        minlength=\\\"2\\\"\\n                                        >\\n                                        <div [hidden]=\\\"!method.errors?.required\\\"  class=\\\"invalid-feedback\\\">\\n                                            Please enter a valid method\\n                                        </div>\\n                                        <div [hidden]=\\\"!method.errors?.minlength\\\"  class=\\\"invalid-feedback\\\">\\n                                            Must be at least 2 characters\\n                                        </div>\\n                                    </div>\\n                              </form>\\n                            </div>\\n                            <div class=\\\"modal-footer\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updatePayment()\\\" data-dismiss=\\\"modal\\\">Update</button>\\n                            </div>\\n                          </div>\\n                        </div>\\n                    </div>\\n\\n                    <br>\\n\\n                    <input [disabled]=\\\"invoice.listItemArray.length == 0 || invoiceForm.invalid\\\" type=\\\"submit\\\" value=\\\"Save\\\" class=\\\"btn btn-primary btn-block mb-md-4\\\">\\n          </form>\\n      </div>\"","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport { InvoiceService } from '../../service/invoice.service';\nimport {CustomerService} from '../../service/customer.service';\nimport{ ItemService } from '../../service/item.service';\n\nimport {Invoice, ListItem, Payment} from '../../models/Invoice';\nimport {Customer} from '../../models/customer';\nimport {Item} from '../../models/item';\nimport {Address} from '../../models/customer';\n\n@Component({\n  selector: 'app-edit-orders',\n  templateUrl: './edit-orders.component.html',\n  styleUrls: ['./edit-orders.component.css']\n})\nexport class EditOrdersComponent implements OnInit {\n\n  id: string;\n  customer: Customer;\n  customers: Customer[];\n  items: Item[] = [];\n  displayItem : Item = {\n    id: '',\n    itemName : '',\n    itemDesc : '',\n    unitPriceAed : 0,\n    unitPricePhp : 0,\n    stockStatus : ''\n  };\n  \n  indexToDelete : number;\n  paymentIndexToDelete: number;\n  duplicateFound: boolean = false;\n  paymentArray: Payment[] = [];\n  payment: Payment = {\n    amount : 0,\n    datePaid : Date.now(),\n    method : ''\n  };\n  itemTotalAed : number = 0;\n  totalAmountPaidAed : number = 0;\n  balanceAed : number = 0;\n  hasBalance : boolean = true;\n  listItem: ListItem = {\n    itemId : '',\n    quantity : 0\n  }\n  invoice: Invoice = {\n    invoiceNumber: '',\n    customerId : '',\n    discount : 0,\n    freight : 0,\n    status : '',\n    dateInvoiced : Date.now(),\n    dateDelivered : Date.now(),\n    deliveryOption: '',\n    remarks : '',\n    listItemArray :  [],\n    payments : []\n  }\n\n  //Item To Edit Modal Variables\n  itemNameToEdit: string = '';\n  listItemToEdit: ListItem = {\n    itemId: '',\n    quantity: 0\n  }\n\n  paymentToEdit: Payment = {\n    amount : 0,\n    datePaid : 0,\n    method : ''\n  };\n  paymentToEditPosition = 0;\n\n  constructor(\n    private invoiceService: InvoiceService,\n    private flashMessage: NgFlashMessageService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private customerService: CustomerService,\n    private itemService : ItemService\n  ) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.invoiceService.getInvoice(this.id).subscribe(invoice => this.invoice = invoice);\n    this.customerService.getCustomers().subscribe(customers => this.customers = customers);\n    this.itemService.getItems().subscribe( items => this.items = items);\n  }\n\n  onSubmit({value, valid} : {value: Invoice, valid: boolean}){\n    if(!valid){\n      this.flashMessage.showFlashMessage({messages:[\"Please fill-out the form correctly\"], type: 'danger', timeout: 4000});\n    }else{\n      value.id = this.id;\n      value.listItemArray = this.invoice.listItemArray;\n      value.payments = this.invoice.payments;\n      if(value.deliveryOption == 'Meet-up'){\n        value.freight = 0;\n      }\n      this.invoiceService.updateInvoice(value);\n      this.flashMessage.showFlashMessage({messages:[\"Invoice updated successfully\"], type: 'success', timeout:4000});\n      this.router.navigate(['/order/' + this.id]);\n    }\n  }\n\n  findCustomer(){\n    this.customers.forEach(customer => {\n      if(customer.id === this.invoice.customerId){\n        this.customer = customer;\n      }\n    });\n    console.log(\"Customer: \", this.customer);\n  }\n\n  addItem(){\n    this.duplicateFound = false;\n    if(this.listItem.quantity < 1  || !this.listItem.itemId){\n      // clear the list item\n      this.listItem = {\n        itemId : '',\n        quantity : 0,\n      }\n      this.flashMessage.showFlashMessage({messages: [\"Please enter item correctly\"], type: 'danger', timeout: 4000});\n    }else{\n      this.invoice.listItemArray.forEach( item => {\n        if(item.itemId === this.listItem.itemId){\n          this.duplicateFound = true;\n        }\n      });\n      if(this.duplicateFound){\n        this.flashMessage.showFlashMessage({messages: [\"Duplicate item.\"], type: 'danger', timeout: 4000});\n      }else{\n        this.invoice.listItemArray.push(this.listItem);\n        this.flashMessage.showFlashMessage({messages: [\"Item added successfully\"], type: 'success', timeout: 4000});\n        // clear the list item\n        this.listItem = {\n          itemId : '',\n          quantity : 0,\n        }\n      } \n    }\n\n  }\n\n  getItemDetails(id : string){\n    this.items.forEach( itemDetails => {\n      if(itemDetails.id == id){\n        this.displayItem = itemDetails;\n      }\n    });\n  }\n\n  deleteItem(id : string){\n    if(confirm(\"Are you sure?\")){\n      this.indexToDelete = this.invoice.listItemArray.findIndex(itemToDelete => itemToDelete.itemId == id);\n      this.invoice.listItemArray.splice(this.indexToDelete, 1);\n      this.flashMessage.showFlashMessage({messages :[\"Item removed\"], type: 'success', timeout: 4000});\n    }\n  }\n\n  addPayment(){\n    console.log(\"Add Payment: \", this.payment);\n    if(this.payment.amount < 1 || !this.payment.method){\n      // clear the payment\n      this.payment = {\n        amount : 0,\n        datePaid : Date.now(),\n        method : ''\n      }\n      this.flashMessage.showFlashMessage({messages: [\"Please enter payment correctly\"], type: 'danger', timeout: 4000});\n    }else{\n      this.payment.datePaid = Date.now();\n      this.invoice.payments.push(this.payment);\n      console.log(\"Add Payment invoice: \",this.invoice.payments );\n      this.flashMessage.showFlashMessage({messages: [\"Payment added successfully\"], type: 'success', timeout: 4000});\n      this.payment = {\n        amount : 0,\n        datePaid : Date.now(),\n        method : ''\n      }\n    }\n  }\n\n  getTotalAmount(){\n    this.itemTotalAed = 0;\n    this.invoice.listItemArray.forEach(listItem => {\n      this.items.forEach(item => {\n        if(item.id === listItem.itemId){\n            this.itemTotalAed = this.itemTotalAed + (listItem.quantity * item.unitPriceAed);\n        }\n      });\n    });\n    this.itemTotalAed = this.itemTotalAed + this.invoice.freight - this.invoice.discount;\n  }\n\n  getBalance(){\n    this.totalAmountPaidAed = 0;\n    this.invoice.payments.forEach(payment => {\n      this.totalAmountPaidAed = this.totalAmountPaidAed + payment.amount;\n    });\n    this.getTotalAmount();\n    this.balanceAed = this.itemTotalAed - this.totalAmountPaidAed;\n    if(this.balanceAed > 0){\n      this.hasBalance = true;\n    }else{\n      this.hasBalance = false;\n    }\n  }\n\n  deletePayment(paymentToDelete : Payment){\n    if(confirm(\"Are you sure?\")){\n      this.paymentIndexToDelete = this.invoice.payments.findIndex(payment => \n        payment.datePaid == paymentToDelete.datePaid\n      );\n      this.invoice.payments.splice(this.paymentIndexToDelete, 1);\n      this.flashMessage.showFlashMessage({messages: [\"Payment removed\"], type: 'success', timeout: 4000});\n    }\n  }\n\n  editItem(listItem: ListItem){\n\n    this.listItemToEdit = {...listItem};\n    this.items.map(item => {\n      if(item.id == listItem.itemId){\n        this.itemNameToEdit = item.itemName;\n      }\n    })\n  }\n\n  updateItem(){\n\n    var {quantity, itemId} = this.listItemToEdit;\n\n    if(!quantity || quantity < 1){\n      this.flashMessage.showFlashMessage({messages: [\"Please enter a valid quantity\"], type: 'danger', timeout:4000});\n    }else{\n      this.invoice.listItemArray.map( listItem => {\n        if(listItem.itemId == itemId){\n          listItem.quantity = quantity;\n        }\n      })\n    }\n  }\n\n  editPayment(paymentToEdit : Payment){\n    this.paymentToEdit = {...paymentToEdit};\n  }\n\n  updatePayment(){\n    var { amount, datePaid, method } = this.paymentToEdit;\n\n    if(!amount || amount < 1 || !method || method.length < 3){\n      this.flashMessage.showFlashMessage({messages: [\"Please fill out the payment details correctly\"], type: 'danger', timeout: 4000});\n    }else{\n      //console.log({amount, datePaid, method})\n      this.invoice.payments.map(payment => {\n          if(payment.datePaid == datePaid){\n            payment.amount = amount;\n            payment.datePaid = datePaid;\n            payment.method = method;\n          }\n        });\n    }\n    \n  \n    //console.log(...this.invoice.payments);\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <a routerLink=\\\"/product/{{id}}\\\" type=\\\"button\\\" class=\\\"btn btn-elegant\\\"> <i class=\\\"fa fa-arrow-circle-left\\\"></i>\\n      Back\\n  </a>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n\\n  </div>\\n</div>\\n\\n<br>\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    Edit Product\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <form #productForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(productForm)\\\" >\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"image\\\">Upload Image</label>\\n            <input \\n                type=\\\"file\\\" \\n                name=\\\"image\\\" \\n                id=\\\"image\\\" \\n                class=\\\"form-control-file\\\"\\n                (change)=\\\"uploadFile($event)\\\"\\n              >\\n              <div *ngIf=\\\"uploadPercent | async as pct\\\">\\n                  <progress  style=\\\"width: 50%\\\" max=\\\"100\\\" [value]=\\\"pct\\\" ></progress>\\n              </div>\\n              \\n              <div class=\\\"result\\\" *ngIf=\\\"downloadURL | async let uploadSRC\\\">\\n                  <!-- Display image after upload:\\n                      TO DO: how to inform stop client from going to other page when the upload is not yet done\\n                  -->\\n                  <div class=\\\"col-md-4\\\">\\n                      <div class=\\\"thumbnail\\\">\\n                          <img src=\\\"{{uploadSRC}}\\\" style=\\\"width:100%\\\">\\n                      </div>\\n                  </div>\\n              </div>   \\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"itemName\\\">Item Name: </label>\\n            <input \\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              name=\\\"itemName\\\"\\n              #itemName = \\\"ngModel\\\"\\n              [ngClass]=\\\"{'is-invalid': itemName.errors && itemName.touched}\\\"\\n              [(ngModel)]=\\\"item.itemName\\\"\\n              value=\\\"itemName\\\"\\n              required\\n              minlength=\\\"2\\\"\\n              >\\n              <div [hidden]=\\\"!itemName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                  Item name required\\n              </div>\\n              <div [hidden]=\\\"!itemName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                  Must be at least 2 characters\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"itemDesc\\\">Description: </label>\\n              <input \\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                name=\\\"itemDesc\\\"\\n                id=\\\"itemDesc\\\"\\n                [(ngModel)]=\\\"item.itemDesc\\\"\\n                >\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"unitPriceAed\\\">Price AED</label>\\n                <input \\n                  type=\\\"number\\\" \\n                  id=\\\"unitPriceAed\\\" \\n                  class=\\\"form-control\\\" \\n                  name=\\\"unitPriceAed\\\" \\n                  #unitPriceAed=\\\"ngModel\\\"\\n                  [ngClass]=\\\"{'is-invalid': unitPriceAed.errors && unitPriceAed.touched}\\\"\\n                  [(ngModel)] = \\\"item.unitPriceAed\\\"\\n                  required\\n                  >\\n                  <div [hidden]=\\\"!unitPriceAed.errors?.required && unitPriceAed.value > 0\\\" class=\\\"invalid-feedback\\\">\\n                    Price is required\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"unitPricePhp\\\">Price PHP</label>\\n                  <input \\n                    type=\\\"number\\\" \\n                    id=\\\"unitPricePhp\\\" \\n                    class=\\\"form-control\\\" \\n                    name=\\\"unitPricePhp\\\" \\n                    #unitPricePhp=\\\"ngModel\\\"\\n                    [ngClass]=\\\"{'is-invalid': unitPricePhp.errors && unitPricePhp.touched}\\\"\\n                    [(ngModel)] = \\\"item.unitPricePhp\\\"\\n                    required\\n                    >\\n                    <div [hidden]=\\\"!unitPricePhp.errors?.required && unitPricePhp.value > 0\\\" class=\\\"invalid-feedback\\\">\\n                      Price is required\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"stockStatus\\\">Stock Status</label>\\n                  <select \\n                      name=\\\"stockStatus\\\" \\n                      id=\\\"stockStatus\\\"\\n                      class=\\\"form-control\\\"\\n                      #stockStatus=\\\"ngModel\\\"\\n                      [(ngModel)]=\\\"item.stockStatus\\\"\\n                    > \\n                      <option value=\\\"IN STOCK\\\">In Stock</option>\\n                      <option value=\\\"OUT OF STOCK\\\">Out of Stock</option>\\n                  </select>\\n                </div>\\n      <input [disabled]=\\\"productForm.invalid\\\" type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary btn-block\\\">\\n    </form>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\nimport {Location} from '@angular/common';\n\nimport {Item} from '../../models/item';\n\nimport { NgFlashMessageService } from 'ng-flash-messages';\n\nimport {ItemService} from '../../service/item.service';\n\nimport {AngularFireStorage} from '@angular/fire/storage';\nimport {finalize} from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n\n\n@Component({\n  selector: 'app-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.scss']\n})\nexport class EditProductComponent implements OnInit {\n  id : string;\n  item: Item = {\n    id: '',\n    itemName : '',\n    itemDesc : '',\n    unitPriceAed : 0,\n    unitPricePhp : 0,\n    stockStatus : '',\n    imagePath: ''\n  }\n\n  uploadPercent: Observable<number>;\n  downloadURL: Observable<string>;\n\n\n  constructor(\n    private itemService: ItemService,\n    private flashMessage: NgFlashMessageService,\n    private storage: AngularFireStorage,\n    private router: Router,\n    private route: ActivatedRoute,\n    private location: Location  \n  ) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.itemService.getItem(this.id).subscribe(item => this.item = item);\n  }\n\n  onSubmit({value, valid} : {value: Item, valid: boolean}){\n    console.log(\"valid: \", valid);\n    console.log(\"value: \", value);\n    if(!valid || !value.itemName.trim() || value.unitPriceAed < 1 || value.unitPricePhp < 1){\n      this.flashMessage.showFlashMessage({messages:[\"Please fill-out the form correctly\"], type: 'danger', timeout: 4000});\n    }else{\n      value.id = this.id;\n      if(this.item.imagePath){\n        value.imagePath = this.item.imagePath;\n      }\n      console.log(\"onSubmit: \", value);\n      this.itemService.updateItem(value);\n      this.flashMessage.showFlashMessage({messages:['Item updated successfully'], type:'success', timeout: 4000});\n      this.location.back();\n    }\n  }\n\n  uploadFile(event){\n    const file = event.target.files[0];\n    const filePath = `fps/${new Date().getTime()}_${file.name}`;\n    const fileRef = this.storage.ref(filePath);\n    const task = this.storage.upload(filePath, file);\n    \n    // TO DO : add a code to check set temp value if empty\n    this.item.imagePath = filePath;\n\n    //observe percentage changes\n    this.uploadPercent = task.percentageChanges();\n    //get notified when the download URL is available\n    task.snapshotChanges().pipe(\n      finalize(() => this.downloadURL = fileRef.getDownloadURL())\n    )\n    .subscribe()\n  }\n\n  goBack(){\n    this.location.back();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  homepage works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6 mx-auto\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h1 class=\\\"text-center pb-4 pt-3\\\">\\n          <span class=\\\"text-primary\\\"><i class=\\\"fa fa-lock\\\"></i> Freespirited Shop</span>  Login\\n        </h1>\\n        <form (submit)=\\\"onSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\" name>Email</label>\\n            <input type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" required class=\\\"form-control\\\" >\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"password\\\" name>Password</label>\\n              <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" required class=\\\"form-control\\\" >\\n            </div>\\n            <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-primary btn-block\\\">\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../service/auth.service';\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  email : string;\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: NgFlashMessageService\n  ) { }\n\n  ngOnInit() {\n    this.authService.getAuth().subscribe(auth => {\n      if(auth){\n        this.router.navigate(['/']);\n      }\n    });\n  }\n\n  onSubmit(){\n    this.authService.login(this.email, this.password)\n      .then(res => {\n        this.flashMessage.showFlashMessage({messages: [\"You are now logged in.\"], type: 'success', timeout: 4000});\n        this.router.navigate(['/']);\n      })\n      .catch(err => {\n        this.flashMessage.showFlashMessage({messages: [err.message], type: 'danger', timeout: 4000})\n      });\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark mb-4\\\" style=\\\"background-color: #339999;\\\">\\n  <div class=\\\"container\\\">\\n    <a routerLink=\\\"/\\\"  class=\\\"navbar-brand\\\">Freespirited Online Shop</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarMain\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarMain\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n          <a routerLink=\\\"/\\\" class=\\\"nav-link\\\">Invoices</a>\\n        </li>\\n        <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n            <a routerLink=\\\"/products\\\" class=\\\"nav-link\\\">Products</a>\\n          </li>\\n          <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n              <a routerLink=\\\"/customers\\\" class=\\\"nav-link\\\">Customers</a>\\n            </li>\\n      </ul>\\n\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li *ngIf=\\\"!isLoggedIn && showRegister\\\" class=\\\"nav-item\\\">\\n          <a routerLink=\\\"/register\\\" class=\\\"nav-link\\\">Register</a>\\n        </li>\\n        <li *ngIf=\\\"!isLoggedIn\\\" class=\\\"nav-item\\\">\\n          <a routerLink=\\\"/login\\\" class=\\\"nav-link\\\">Login</a>\\n        </li>\\n        <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n            <a href=\\\"#\\\" class=\\\"nav-link\\\"> {{loggedInUser}} </a>\\n        </li>\\n        <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n            <a href=\\\"/settings\\\" class=\\\"nav-link\\\"> Settings </a>\\n        </li>\\n        <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n            <a  href=\\\"#\\\" (click)=\\\"onLogoutClick()\\\" class=\\\"nav-link\\\"> Logout </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../service/auth.service';\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport {Router} from '@angular/router';\nimport {SettingsService} from '../../service/settings.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  isLoggedIn : boolean;\n  loggedInUser: string;\n  showRegister: boolean;\n\n  constructor(\n    private authService: AuthService,\n    private flashMessage: NgFlashMessageService,\n    private router: Router,\n    private settingsService : SettingsService\n  ) { }\n\n  ngOnInit() {\n    this.showRegister = this.settingsService.getSettings().allowRegistration;\n    this.authService.getAuth().subscribe(auth => {\n      if(auth){\n        this.isLoggedIn = true;\n        this.loggedInUser = auth.email;\n      }else{\n        this.isLoggedIn = false;\n      }\n  });\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessage.showFlashMessage({messages: [\"You are now logged out.\"], type: 'success', timeout: 4000});\n    this.router.navigate(['/login']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  notfound works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n       <a routerLink=\\\"/\\\" type=\\\"button\\\" class=\\\"btn btn-elegant\\\"> <i class=\\\"fa fa-arrow-circle-left\\\"></i>\\n        Back\\n      </a>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"btn-group pull-right\\\">\\n        <a routerLink=\\\"/order/edit/{{id}}\\\" class=\\\"btn btn-dark\\\">Edit</a>\\n        <button type=\\\"button\\\" (click)=\\\"onDeleteClick()\\\" class=\\\"btn btn-danger\\\" >Delete</button>\\n      </div>\\n    </div>\\n</div>\\n<hr>\\n\\n<app-loading-spinner *ngIf=\\\"showSpinner\\\"></app-loading-spinner>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <h2>Invoice</h2>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <h4 class=\\\"pull-right\\\">Order # {{invoice.invoiceNumber}} </h4>\\n  </div>\\n</div>\\n<hr>\\n<div class=\\\"row mb-4\\\">\\n  <div class=\\\"col-md-6\\\">\\n\\n    <h5><span class=\\\"font-weight-bold\\\">Invoiced To:</span></h5>\\n    <p>\\n      {{ findCustomer() }}\\n      {{ customerName | titlecase}} <br>\\n      <i class=\\\"fa fa-phone\\\"></i> {{customer.contactNumber}} <br>\\n      <i class=\\\"fa fa-envelope\\\"></i> {{customer.email}} <br>\\n      <i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i> {{ address.line1 + ', ' + address.city + ', ' + address.country}}\\n    </p>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n      <h5 class=\\\"pull-right\\\">\\n          <span class=\\\"font-weight-bold\\\">Status: </span> <br> {{invoice.status | titlecase}}\\n      </h5>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n      <h5 >\\n         <span class=\\\"font-weight-bold\\\">Balance:</span> <br>\\n          {{ getBalance() }}\\n          <span \\n          [class.text-danger]=\\\"hasBalance\\\"\\n          [class.text-success]=\\\"!hasBalance\\\">\\n          {{ balanceAed | currency: 'AED' }}</span> \\n        </h5>\\n        <button class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" data-target=\\\"#viewPayments\\\" >\\n            View Payments\\n        </button>\\n  </div>\\n   <div class=\\\"col-md-6\\\">\\n     <h5 class=\\\"pull-right\\\"> <span class=\\\"font-weight-bold\\\">Date Invoiced:</span> <br>\\n        {{invoice.dateInvoiced | date}} \\n     </h5>\\n   </div>\\n</div>\\n\\n<!-- View Payments Modal-->\\n        <div class=\\\"modal fade\\\"  id=\\\"viewPayments\\\">\\n          <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"table\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"viewPaymentsModalTitle\\\">\\n                  View Payments\\n                </h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" ><span aria-hidden=\\\"true\\\" >&times;</span></button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                <div *ngIf=\\\"invoice.payments.length > 0 ;else noPayments\\\" >\\n                    <table class=\\\"table table-hover table-responsive\\\" >\\n                        <thead>\\n                           <th>Date Paid</th>\\n                           <th>Method</th>\\n                           <th>Amount</th>\\n                        </thead>\\n                        <tbody>\\n                          <tr *ngFor=\\\"let payment of invoice.payments\\\" >\\n                            <td > {{payment.datePaid | date}} </td>\\n                            <td> {{payment.method | titlecase}} </td>\\n                            <td> {{payment.amount | currency: 'AED'}} </td>\\n                          </tr>\\n                          <tr>\\n                            <td></td>\\n                            <td><h5>Total</h5></td>\\n                            <td>\\n                               {{getBalance()}}\\n                              <h5>\\n                                 {{totalAmountPaidAed}} \\n                              </h5>\\n                         </td>\\n                          </tr>\\n                        </tbody>\\n                       </table>\\n                </div>\\n                <ng-template #noPayments>\\n                  <h5>No payment.</h5>\\n                </ng-template>\\n              </div>\\n              <div  class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" >Close</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      <!-- end of Payments Modal-->\\n<br>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n      <h5><span class=\\\"font-weight-bold\\\">Remarks:</span></h5>\\n      <p>\\n        {{invoice.remarks}}\\n      </p>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n\\n  </div>   \\n</div>\\n\\n<br>\\n\\n<div class=\\\"card mb-4\\\">\\n  <div class=\\\"card-header\\\">\\n    Order Summary\\n  </div>\\n  <div class=\\\"card-body\\\">\\n      <table *ngIf=\\\"invoice.listItemArray?.length > 0\\\" class=\\\"table table-hover table-responsive\\\">\\n          <thead>\\n              <tr>\\n                <th>Name</th>\\n                <th>Price</th>\\n                <th>Quantity</th>\\n                <th>Description</th>\\n                <th>Line Total</th>\\n              </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let listItem of invoice.listItemArray\\\" >\\n              {{findItem(listItem.itemId)}}\\n              <td> {{item.itemName}} </td>\\n              <td> {{item.unitPriceAed | currency: 'AED' }} </td>\\n              <td>{{listItem.quantity}}</td>\\n              <td> {{item.itemDesc}} </td>\\n              <td> \\n              \\n                {{ getLineTotal(listItem.quantity, item.unitPriceAed)}}\\n                {{ lineTotal | currency: 'AED'}} </td>\\n            </tr>\\n\\n            {{getTotalAmount()}}\\n\\n            <tr>\\n                <td></td>\\n                <td></td>\\n                <td></td>\\n                <td class=\\\"font-weight-bold\\\"> SubTotal </td>\\n                <td>\\n                    {{subTotal | currency: 'AED' }}\\n                </td>\\n            </tr>\\n            <tr>\\n                <td></td>\\n                <td></td>\\n                <td></td>\\n                <td class=\\\"font-weight-bold\\\"> Freight </td>\\n                <td>\\n                    {{invoice.freight | currency: 'AED' }}\\n                </td>\\n            </tr>\\n            <tr class=\\\"border-0\\\">\\n                <td></td>\\n                <td></td>\\n                <td></td>\\n                <td class=\\\"font-weight-bold\\\"> Discount </td>\\n                <td>\\n                    {{invoice.discount | currency: 'AED' }} \\n                </td>\\n            </tr>\\n            <tr>\\n              <td></td>\\n              <td></td>\\n              <td></td>\\n              <td class=\\\"font-weight-bold\\\"> Grand Total </td>\\n              <td>\\n                  {{itemTotalAed | currency: 'AED' }}\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport { InvoiceService } from '../../service/invoice.service';\nimport {CustomerService} from '../../service/customer.service';\nimport{ ItemService } from '../../service/item.service';\n\nimport {Invoice} from '../../models/Invoice';\nimport {Customer} from '../../models/customer';\nimport {Item} from '../../models/item';\nimport {Address} from '../../models/customer';\n\n@Component({\n  selector: 'app-order-details',\n  templateUrl: './order-details.component.html',\n  styleUrls: ['./order-details.component.css']\n})\nexport class OrderDetailsComponent implements OnInit {\n  id : string;\n  customers: Customer[] = [];\n  customerName: string = \"\";\n  customer: Customer = {};\n  items: Item[] = [];\n  itemTotalAed : number = 0;\n  totalAmountPaidAed: number = 0;\n  balanceAed: number = 0;\n  hasBalance : boolean = false;\n  item: Item = {};\n  address: Address = {};\n  lineTotal : number = 0;\n  subTotal : number = 0;\n  invoice : Invoice = {\n    id : '',\n    invoiceNumber : '',\n    customerId : '',\n    discount : 0,\n    freight : 0,\n    status : '',\n    dateInvoiced : 0,\n    dateDelivered : 0,\n    deliveryOption : '',\n    remarks : '',\n    listItemArray : [],\n    payments : []\n  }\n\n  showSpinner : boolean = true;\n\n  constructor(\n    private invoiceService: InvoiceService,\n    private flashMessage: NgFlashMessageService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private customerService: CustomerService,\n    private itemService : ItemService\n    ) { }\n\n  ngOnInit() {\n    //Get id from url\n    this.id = this.route.snapshot.params['id'];\n    this.invoiceService.getInvoice(this.id).subscribe(invoice => {\n      this.invoice = invoice;\n      this.showSpinner = false;\n    \n    });\n    this.customerService.getCustomers().subscribe(customers => this.customers = customers);\n    this.itemService.getItems().subscribe( items => this.items = items);\n  }\n\n  findCustomer(){\n    this.customers.forEach(customer => {\n      if(customer.id === this.invoice.customerId){\n        this.customer = customer;\n        this.address = customer.address;\n        this.customerName = customer.firstName + ' ' + customer.lastName;\n      }\n    });\n  }\n\n  getTotalAmount(){\n    this.itemTotalAed = 0;\n    this.subTotal = 0;\n    this.invoice.listItemArray.forEach(listItem => {\n      this.items.forEach(item => {\n        if(item.id === listItem.itemId){\n            this.subTotal = this.subTotal + (listItem.quantity * item.unitPriceAed);\n        }\n      });\n    });\n    this.itemTotalAed = this.subTotal + this.invoice.freight - this.invoice.discount;\n  }\n\n  getBalance(){\n    this.totalAmountPaidAed = 0;\n    if(this.invoice.payments.length > 0){\n      this.invoice.payments.forEach(payment => {\n        this.totalAmountPaidAed = this.totalAmountPaidAed + payment.amount;\n      });\n    }\n    this.getTotalAmount();\n    this.balanceAed = this.itemTotalAed - this.totalAmountPaidAed;\n    if(this.balanceAed > 0){\n      this.hasBalance = true;\n    }else{\n      this.hasBalance = false;\n    }\n  }\n\n  findItem(id: string){\n    this.items.forEach(item => {\n      if(item.id === id){\n        this.item = item;\n      }\n    });\n  }\n\n  onDeleteClick(){\n    if(confirm('Are you sure?')){\n      this.invoiceService.deleteInvoice(this.invoice);\n      this.flashMessage.showFlashMessage({messages:['Invoice removed.'], type:'success', timeout: 4000});\n      this.router.navigate(['/orders']);\n    }\n  }\n\n  getLineTotal(quantity: number, price: number){\n    this.lineTotal = quantity * price;\n  }\n\n}\n","module.exports = \"#newButton {\\n    background-color: #ff9966;\\n}\\n\\na:hover { \\n    color: #ffcccc;\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9\\\">\\n    <h2>\\n        Invoices\\n    </h2>\\n  </div>\\n  <div class=\\\"col-md-3\\\">\\n      <a routerLink=\\\"/invoice/add\\\" class=\\\"btn float-right\\\" id=\\\"newButton\\\"><i class=\\\"fa fa-plus\\\"></i> New Invoice</a>\\n    </div>\\n</div>\\n\\n<br>\\n\\n<app-loading-spinner *ngIf=\\\"showSpinner\\\"></app-loading-spinner>\\n\\n\\n<div class=\\\"table-responsive\\\" >\\n  <table *ngIf=\\\"invoices\\\" datatable [dtOptions]=\\\"dtOptions\\\" class=\\\"row-border hover\\\">\\n    <thead>\\n      <tr>\\n        <th> Order # </th>\\n        <th> Status </th>\\n        <th> Customer</th>\\n        <th> Total Amount </th>\\n        <th> Paid Amount </th>\\n        <th> Balance Due </th>\\n        <th> Delivery Option </th>\\n        <th> Country </th>\\n        <th> Date Invoiced </th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let invoice of invoices\\\">\\n        <td> {{invoice.invoiceNumber}} </td>\\n        <td  > {{invoice.status | titlecase}} </td>\\n        <td>\\n          {{ findCustomer(invoice.customerId) }}\\n          {{ customerName | titlecase }}</td>\\n        <td>\\n          {{getTotal(invoice)}}\\n          {{itemTotalAed | currency: 'AED'  }}\\n        </td>\\n        {{getBalance(invoice)}}\\n        <td>\\n            {{totalAmountPaid | currency: 'AED' }} \\n        </td>\\n        <td> \\n            <span [class.text-danger]=\\\"hasBalance\\\"\\n            [class.text-success]=\\\"!hasBalance\\\">\\n          {{totalAmountDue | currency: 'AED'  }}</span>\\n        </td>\\n        <td >{{ invoice.deliveryOption }}</td>\\n        <td > {{ customerCountry }} </td>\\n        <td> {{ invoice.dateInvoiced | date }} </td>\\n        <td class=\\\"pull-right\\\"><a routerLink=\\\"/order/{{ invoice.id }}\\\"> <i class=\\\"fa fa-angle-right fa-2x grey-text\\\"></i></a></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"","\nimport { Component, OnInit} from '@angular/core';\n\nimport {InvoiceService } from '../../service/invoice.service';\nimport {CustomerService} from '../../service/customer.service';\nimport {ItemService} from '../../service/item.service';\n\nimport { Invoice } from '../../models/Invoice';\nimport {Customer} from '../../models/customer';\nimport {Item} from '../../models/item';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit{\n\n  invoices: Invoice[];\n  invoice: Invoice;\n  customerName: string = '';\n  customerCountry: string = '';\n  customers: Customer[] = [];\n  items: Item[] = [];\n  itemTotalAed : number;\n  itemTotalPhp : number;\n  totalAmountPaid: number = 0;\n  totalAmountDue: number = 0;\n  hasBalance : boolean;\n  showSpinner : boolean = true;\n\n  pendingInvoices : Invoice[] = [];\n  deliveredInvoices : Invoice [] = [];\n\n  dtOptions : DataTables.Settings = {};\n\n  constructor(\n    private invoiceService: InvoiceService,\n    private customerService: CustomerService,\n    private itemService: ItemService\n    ) { }\n\n\n  ngOnInit() {\n    this.invoiceService.getInvoices().subscribe(invoices => {\n       this.invoices = invoices;\n       this.showSpinner = false;\n    });\n    this.customerService.getCustomers().subscribe(customers => this.customers = customers);\n    this.itemService.getItems().subscribe(items => this.items = items);\n    this.dtOptions = {\n      pagingType : 'full_numbers'\n    }\n  }\n\n  findCustomer(id: string){\n    this.customers.forEach(customer => {\n      if(customer.id === id){\n        this.customerName = customer.firstName + ' ' + customer.lastName;\n        this.customerCountry = customer.address.country;\n      }\n    });\n  }\n\n  getTotal(invoice: Invoice) {\n    this.itemTotalAed = 0;\n    this.itemTotalPhp = 0;\n    if(invoice.listItemArray.length > 0){\n      invoice.listItemArray.forEach(listItem =>{  //loop through the list Item Array\n        this.items.forEach(item => {  // loop through the Item Collection\n          if(item.id === listItem.itemId){\n            this.itemTotalAed = this.itemTotalAed + (item.unitPriceAed * listItem.quantity);\n            this.itemTotalPhp = this.itemTotalPhp + (item.unitPricePhp * listItem.quantity);\n          }\n        })\n      });\n      this.itemTotalAed = this.itemTotalAed + invoice.freight - invoice.discount;\n    }\n  };\n\n\n    getBalance(invoice: Invoice){\n      this.totalAmountPaid = 0;\n      this.totalAmountDue = 0;\n      if(invoice.payments.length > 0){\n        invoice.payments.forEach(payment => {\n          this.totalAmountPaid = this.totalAmountPaid + payment.amount;\n        });\n      }\n\n      this.totalAmountDue = this.itemTotalAed - this.totalAmountPaid;\n      if(this.totalAmountDue > 0){\n        this.hasBalance = true;\n      }else{\n        this.hasBalance = false;\n      }\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">  \\n        <a routerLink=\\\"/products\\\" type=\\\"button\\\" class=\\\"btn btn-elegant\\\"> <i class=\\\"fa fa-arrow-circle-left\\\"></i>\\n            Back\\n        </a>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"btn-group pull-right\\\">\\n        <a routerLink=\\\"/product/edit/{{id}}\\\" class=\\\"btn btn-dark\\\">Edit</a>\\n        <button  type=\\\"button\\\" (click)=\\\"onDeleteClick()\\\" class=\\\"btn btn-danger\\\" >Delete</button>\\n        </div>\\n    </div>\\n</div>\\n<hr>\\n<app-loading-spinner *ngIf=\\\"showSpinner\\\" ></app-loading-spinner>\\n\\n<div *ngIf=\\\"item\\\" class=\\\"mx-auto w-75\\\">\\n    \\n        {{displayImage()}}\\n    \\n        <mdb-card >\\n            \\n        <div *ngIf=\\\"itemImage\\\" class=\\\"view rgba-white-slight waves-light\\\" mdbWavesEffect>\\n            \\n            <mdb-card-img  src=\\\"{{itemImage}}\\\"></mdb-card-img>\\n            <a> <div class=\\\"mask\\\"></div> </a>\\n        </div>\\n        <!--    if no image -->\\n        <div *ngIf=\\\"!itemImage\\\" class=\\\"view rgba-white-slight waves-light\\\" mdbWavesEffect>\\n                \\n                <mdb-card-img  src=\\\"assets/noImage.png\\\"></mdb-card-img>\\n                <a> <div class=\\\"mask\\\"></div> </a>\\n            </div>\\n\\n        <mdb-card-body class=\\\"text-center\\\">\\n           \\n            <div>\\n               <h5 class=\\\"grey-text\\\">{{item.stockStatus}}</h5> \\n            </div>\\n\\n            <div>\\n                    <mdb-card-title class=\\\"text-primary\\\"> <h4> <strong> {{ item.itemName | titlecase }} </strong> </h4> </mdb-card-title>\\n            </div>\\n           <div>\\n                <h5> {{item.unitPriceAed | currency: 'AED'}} / {{item.unitPricePhp | currency: 'PHP'}} </h5>\\n           </div>\\n           <div>\\n                <mdb-card-text>\\n                        {{item.itemDesc}}\\n                </mdb-card-text>\\n           </div>\\n            \\n        </mdb-card-body>\\n    </mdb-card>\\n</div>\\n\\n\\n\\n\\n\\n<!-- <div *ngIf=\\\"item\\\" class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      <h3>{{ item.itemName | titlecase }}</h3> \\n    </div>\\n    <div class=\\\"card-body\\\">\\n            <div class=\\\"thumbnail\\\">\\n                    {{displayImage()}}\\n                    <img src=\\\"{{itemImage}}\\\" style=\\\"width:100%\\\">\\n            </div>\\n\\n        <ul class=\\\"list-group\\\">\\n            <li class=\\\"list-group-item\\\">Unit Price in AED: {{item.unitPriceAed }} </li>\\n            <li class=\\\"li list-group-item\\\"> Unit Price in PHP: {{item.unitPricePhp}}  </li>\\n            <li class=\\\"li list-group-item\\\"> Description: {{item.itemDesc}} </li>\\n            <li class=\\\"li list-group-item\\\"> In-stock: {{item.inStock}} </li>\\n        </ul>\\n    </div> -->\"","import { Component, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport {Item} from '../../models/item';\nimport {Invoice} from '../../models/Invoice';\n\nimport { NgFlashMessageService } from 'ng-flash-messages';\n\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n\nimport {ItemService} from '../../service/item.service';\nimport {InvoiceService} from '../../service/invoice.service';\n\nimport {AngularFireStorage, AngularFireStorageReference} from '@angular/fire/storage';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n  id : string;\n  item: Item = {\n    id: '',\n    itemName: '',\n    itemDesc: '',\n    unitPriceAed:0,\n    unitPricePhp: 0,\n    stockStatus: '',\n    imagePath: ''\n  }\n\n  invoices: Invoice[] = [];\n  itemExist : boolean = false;\n  itemImage : Observable<string> = null;\n  ref : AngularFireStorageReference;\n\n  showSpinner : boolean = true;\n  \n  constructor(\n    private itemService: ItemService,\n    private flashMessage: NgFlashMessageService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private invoiceService: InvoiceService,\n    private storage: AngularFireStorage\n  ) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.itemService.getItem(this.id).subscribe(item => {\n        this.item = item;\n        this.showSpinner = false;\n      });\n    this.invoiceService.getInvoices().subscribe(invoices => this.invoices = invoices);\n  }\n\n  itemExistInInvoice() {\n    this.invoices.map(invoice => {\n      invoice.listItemArray.map(listItem => {\n        if(listItem.itemId == this.id){\n          this.itemExist = true;\n        }\n      });\n    });\n  }\n\n  onDeleteClick(){\n    this.itemExistInInvoice();\n    if(this.itemExist){\n      this.flashMessage.showFlashMessage({messages:['Cannot remove item. Item is used in invoice'], type:'danger', timeout: 4000});\n    }else{\n      if(confirm(\"Are you sure?\")){\n        this.item.id = this.id;\n        this.itemService.deleteItem(this.item);\n       // this.deleteImage();\n        this.flashMessage.showFlashMessage({messages:['Item removed.'], type:'success', timeout: 4000});\n        this.router.navigate(['/products']);\n      }\n    }\n  }\n\n  displayImage(){\n    if(this.item.imagePath){\n      this.ref = this.storage.ref(this.item.imagePath);\n      this.ref.getDownloadURL().subscribe(url => {\n        this.itemImage = url;\n        })\n    }else{\n      this.itemImage = null;\n    }\n    \n  }\n\n\n  // deleteImage() {\n  //   this.storage.ref(this.item.imagePath).delete();\n  // }\n\n}\n    \n\n","module.exports = \"#newButton {\\n    background-color: #ff9966;\\n}\\n\\na:hover { \\n    color: #ffcccc;\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9\\\">\\n    <h2>\\n       Products\\n    </h2>\\n  </div>\\n  <div class=\\\"col-md-3\\\">\\n      <a routerLink=\\\"/product/add\\\" class=\\\"btn float-right\\\" id=\\\"newButton\\\"><i class=\\\"fa fa-plus\\\"></i> New Product</a>\\n    </div>\\n</div>\\n\\n<br>\\n<app-loading-spinner *ngIf=\\\"showSpinner\\\"></app-loading-spinner>\\n<div *ngIf=\\\"items\\\" class=\\\"table-responsive\\\" >\\n  <table  datatable [dtOptions]=\\\"dtOptions\\\" class=\\\"row-border hover\\\">\\n    <thead>\\n      <tr>\\n        <th>Product</th>\\n        <th>Price AED</th>\\n        <th>Price PHP</th>\\n        <th>In Stock</th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let item of items\\\">\\n        <td> {{item.itemName | titlecase}} </td>\\n        <td> {{item.unitPriceAed | currency: 'AED'}} </td>\\n        <td> {{item.unitPricePhp | currency: 'PHP'}} </td>\\n        <td> {{item.stockStatus}} </td>\\n        <td class=\\\"pull-right\\\"> <a routerLink=\\\"/product/{{ item.id }}\\\"> <i class=\\\"fa fa-angle-right fa-2x grey-text\\\"></i> </a> </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport {Item} from '../../models/item';\nimport {Invoice} from '../../models/Invoice';\n\nimport { NgFlashMessageService } from 'ng-flash-messages';\n\nimport {ItemService} from '../../service/item.service';\nimport {InvoiceService} from '../../service/invoice.service';\n\nimport {AngularFireStorage} from '@angular/fire/storage';\nimport {finalize} from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n  items: Item[];\n  item: Item;\n  invoices: Invoice[];\n\n  showSpinner: boolean = true;\n\n  itemToEdit: Item = {\n    itemName : '',\n    itemDesc : '',\n    unitPriceAed : 0,\n    unitPricePhp : 0,\n    stockStatus : '',\n    imagePath: ''\n  }\n\n  itemToAdd: Item = {\n    itemName : '',\n    itemDesc : '',\n    unitPriceAed : 0,\n    unitPricePhp : 0,\n    stockStatus : '',\n    imagePath: '',\n  }\n\n  uploadPercent: Observable<number>;\n  downloadURL: Observable<string>;\n\n  dtOptions : DataTables.Settings = {};\n\n  constructor(\n    private itemService: ItemService,\n    private flashMessage: NgFlashMessageService,\n    private invoiceService: InvoiceService,\n    private storage: AngularFireStorage\n  ) { }\n\n  ngOnInit() {\n    this.itemService.getItems().subscribe(items => {\n      this.items = items;\n      this.showSpinner = false;\n    \n    });\n    this.invoiceService.getInvoices().subscribe(invoices => this.invoices = invoices);\n    this.dtOptions = {\n      pagingType : 'full_numbers'\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6 mx-auto\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h1 class=\\\"text-center pb-4 pt-3\\\">\\n          <span class=\\\"text-primary\\\"><i class=\\\"fa fa-lock\\\"></i> Freespirited Shop</span>  Register\\n        </h1>\\n        <form (submit)=\\\"onSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\" name>Email</label>\\n            <input type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" required class=\\\"form-control\\\" >\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"password\\\" name>Password</label>\\n              <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" required class=\\\"form-control\\\" >\\n            </div>\\n            <input type=\\\"submit\\\" value=\\\"Register\\\" class=\\\"btn btn-primary btn-block\\\">\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../service/auth.service';\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  email : string;\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: NgFlashMessageService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n    this.authService.register(this.email, this.password)\n      .then(res => {\n        this.flashMessage.showFlashMessage({messages: [\"You are now registered and logged in.\"], type: 'success', timeout: 4000});\n        this.router.navigate(['/']);\n      })\n      .catch(err => {\n        this.flashMessage.showFlashMessage({messages: [err.message], type: 'success', timeout: 4000});\n      })\n      \n\n  }  \n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  report works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <a routerLink=\\\"/\\\" class=\\\"btn btn-link\\\">\\n      <i class=\\\"fa fa-arrow-circle-o-left\\\"></i> Back to Dashboard\\n    </a>\\n  </div>\\n  <div class=\\\"col-md-6\\\"></div>\\n</div>\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    Edit Settings\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <form (submit)=\\\"onSubmit()\\\">\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"allowRegistration\\\">Allow Registration </label>\\n          <input type=\\\"checkbox\\\" name=\\\"allowRegistration\\\" [checked]=\\\"settings.allowRegistration\\\" (change)=\\\"settings.allowRegistration = !settings.allowRegistration\\\" >\\n      </div>\\n      <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary btn-block\\\" >\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {Settings} from '../../models/settings';\nimport {SettingsService} from '../../service/settings.service';\nimport {Router } from '@angular/router';\nimport { NgFlashMessageService } from 'ng-flash-messages';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  settings : Settings ;\n\n  constructor(\n    private settingsService: SettingsService,\n    private router: Router,\n    private flashMessage: NgFlashMessageService,\n    ) { }\n\n  ngOnInit() {\n    this.settings = this.settingsService.getSettings();\n  }\n\n  onSubmit(){\n    this.settingsService.changeSettings(this.settings);\n    this.flashMessage.showFlashMessage({messages:[\"Settings updated.\"], type: 'success', timeout:4000});\n  }\n  \n}\n","module.exports = \"\"","module.exports = \"<p>\\n  shop works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shop',\n  templateUrl: './shop.component.html',\n  styleUrls: ['./shop.component.css']\n})\nexport class ShopComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  shopping-cart works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable, Inject} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport {Observable} from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n  })\n  \nexport class AuthGuard implements CanActivate{\n\n    constructor(\n        private router: Router,\n        private afAuth: AngularFireAuth\n    ){}\n\n    canActivate(): Observable<boolean>{\n        return this.afAuth.authState.pipe(map(auth=> {\n            if(!auth){\n                this.router.navigate(['/login']);\n                return false;\n            }else{\n                return true;\n            }\n        }));\n    }\n}","import {Injectable, Inject} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\n\nimport {Settings} from '../models/settings';\nimport {SettingsService} from '../service/settings.service';\n\n@Injectable({\n    providedIn: 'root'\n  })\n  \nexport class RegisterGuard implements CanActivate{\n\n    constructor(\n        private router: Router,\n        private settingsService : SettingsService\n    ){}\n\n    canActivate(): boolean {\n        if(this.settingsService.getSettings().allowRegistration){\n            return true;\n        }else{\n            this.router.navigate(['login']);\n            return false;\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private afAuth: AngularFireAuth) { }\n\n  login(email: string, password: string){\n    return new Promise((resolve, reject) => {\n      this.afAuth.auth.signInWithEmailAndPassword(email, password)\n        .then(userData => resolve(userData),\n        err => reject(err))\n    });\n  }\n\n  getAuth(){\n    return this.afAuth.authState.pipe(map(auth => auth));\n    \n  }\n\n  logout(){\n    this.afAuth.auth.signOut();\n  }\n\n  register(email: string, password: string){\n    return new Promise((resolve, reject) => {\n      this.afAuth.auth.createUserWithEmailAndPassword(email, password)\n        .then(userData => resolve(userData),\n        err => reject(err))\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument} from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {Customer} from '../models/customer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  customersCollection: AngularFirestoreCollection<Customer>;\n  customerDoc: AngularFirestoreDocument<Customer>;\n  customers: Observable<Customer[]>;\n  customer: Observable<Customer>;\n\n  constructor(private afs:AngularFirestore) {\n    this.customersCollection = this.afs.collection('Customer');\n   }\n\n   getCustomers(): Observable<Customer[]>{\n     this.customers = this.customersCollection.snapshotChanges().pipe(map(\n       changes => {\n         return changes.map(action => {\n           const data = action.payload.doc.data() as Customer;\n           const id = action.payload.doc.id;\n           return {id, ...data};\n         });\n       }\n     )) ;\n     return this.customers;\n   }\n\n   getCustomer(id: string): Observable<Customer>{\n     this.customerDoc = this.afs.doc<Customer>(`Customer/${id}`);\n     this.customer = this.customerDoc.snapshotChanges().pipe(\n      map(action => {\n        if(action.payload.exists === false){\n          return null;\n        }else{\n          const data = action.payload.data() as Customer;\n          return data;\n        }\n      })\n     );\n     return this.customer;\n   }\n\n   newClient(customer: Customer){\n      this.customersCollection.add(customer);\n   }\n\n   deleteCustomer(id: string){\n     console.log(\"deleteCustomer Customer ID: \", id);\n     this.customerDoc = this.afs.doc(`Customer/${id}`);\n     this.customerDoc.delete();\n   }\n\n   updateCustomer(customer: Customer){\n    this.customerDoc = this.afs.doc(`Customer/${customer.id}`)\n    this.customerDoc.update(customer);\n   }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument} from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Invoice } from '../models/Invoice';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoiceService {\n  invoicesCollection: AngularFirestoreCollection<Invoice>;\n  invoiceDoc: AngularFirestoreDocument<Invoice>;\n  invoices: Observable<Invoice[]>;\n  invoice: Observable<Invoice>;\n\n  constructor(private afs: AngularFirestore) { \n    this.invoicesCollection = this.afs.collection('Invoice', ref=>ref.orderBy('dateInvoiced', 'desc')); //the variable inside afs.collection should match the name in your firestore\n  }\n\n  getInvoices(): Observable<Invoice[]>{\n    this.invoices = this.invoicesCollection.snapshotChanges()\n    .pipe(map(changes => {\n      return changes.map(action => {\n        const data = action.payload.doc.data() as Invoice;\n        const id = action.payload.doc.id;\n        return {id, ...data } ;\n      });\n    }));\n    return this.invoices;\n  }\n\n  getInvoice(id : string) : Observable<Invoice>{\n    this.invoiceDoc = this.afs.doc<Invoice>(`Invoice/${id}`);\n    this.invoice = this.invoiceDoc.snapshotChanges().pipe(\n      map(action => {\n        if(action.payload.exists === false){\n          return null;\n        }else{\n          const data = action.payload.data() as Invoice;\n          data.id = action.payload.id;\n          return data;\n        }\n      })\n    );\n    return this.invoice;\n  }\n\n  newInvoice(invoice: Invoice){\n      this.invoicesCollection.add(invoice);\n  }\n\n  updateInvoice(invoice: Invoice){\n    this.invoiceDoc = this.afs.doc(`Invoice/${invoice.id}`);\n    this.invoiceDoc.update(invoice);\n  }\n\n  deleteInvoice(invoice: Invoice){\n    this.invoiceDoc = this.afs.doc(`Invoice/${invoice.id}`);\n    this.invoiceDoc.delete();\n  }\n\n  deleteItem({invoiceId, itemArrayId}: {invoiceId: string, itemArrayId: string}){\n    this.invoiceDoc = this.afs.doc(`Invoice/${invoiceId}`);\n    console.log(\"delete Item Invoice Doc: \", this.invoiceDoc);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument} from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {Item} from '../models/item';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemService {\n  itemCollection : AngularFirestoreCollection<Item>;\n  itemDoc: AngularFirestoreDocument<Item>;\n  items: Observable<Item[]>;\n  item: Observable<Item>;\n\n  constructor(private afs: AngularFirestore) { \n    this.itemCollection = this.afs.collection('Item');\n  }\n\n  getItems(): Observable<Item[]> {\n    this.items = this.itemCollection.snapshotChanges().pipe(\n      map( changes => {\n        return changes.map(action => {\n          const data = action.payload.doc.data() as Item;\n          const id = action.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    );\n    return this.items;\n  }\n\n  getItem(id: string): Observable<Item>{\n    this.itemDoc = this.afs.doc<Item>(`Item/${id}`);\n    this.item = this.itemDoc.snapshotChanges().pipe(\n      map(action=>{\n        if(action.payload.exists === false){\n          return null;\n        }else{\n          const data = action.payload.data() as Item;\n          return data;\n        }\n      })\n    );\n    return this.item;\n  }\n\n  deleteItem(item: Item){\n    this.itemDoc = this.afs.doc(`Item/${item.id}`);\n    this.itemDoc.delete();\n  }\n\n  updateItem(item: Item){\n    this.itemDoc = this.afs.doc(`Item/${item.id}`);\n    this.itemDoc.update(item);\n  }\n\n  addItem(item: Item){\n    this.itemCollection.add(item);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport {Settings} from '../models/settings';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n  settings: Settings = {\n    allowRegistration: false\n  }\n\n  constructor() { \n    if(localStorage.getItem('settings') != null){\n      this.settings = JSON.parse(localStorage.getItem('settings'));\n    }\n  }\n\n  getSettings(){\n    return this.settings;\n  }\n\n  changeSettings(settings: Settings){\n    localStorage.setItem('settings', JSON.stringify(settings));\n  }\n}\n","module.exports = \"<div class=\\\"sk-circle\\\">\\n  <div class=\\\"sk-circle1 sk-child\\\"></div>\\n  <div class=\\\"sk-circle2 sk-child\\\"></div>\\n  <div class=\\\"sk-circle3 sk-child\\\"></div>\\n  <div class=\\\"sk-circle4 sk-child\\\"></div>\\n  <div class=\\\"sk-circle5 sk-child\\\"></div>\\n  <div class=\\\"sk-circle6 sk-child\\\"></div>\\n  <div class=\\\"sk-circle7 sk-child\\\"></div>\\n  <div class=\\\"sk-circle8 sk-child\\\"></div>\\n  <div class=\\\"sk-circle9 sk-child\\\"></div>\\n  <div class=\\\"sk-circle10 sk-child\\\"></div>\\n  <div class=\\\"sk-circle11 sk-child\\\"></div>\\n  <div class=\\\"sk-circle12 sk-child\\\"></div>\\n</div>\"","module.exports = \".sk-circle {\\n  margin: 100px auto;\\n  width: 40px;\\n  height: 40px;\\n  position: relative; }\\n\\n.sk-circle .sk-child {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  left: 0;\\n  top: 0; }\\n\\n.sk-circle .sk-child:before {\\n  content: '';\\n  display: block;\\n  margin: 0 auto;\\n  width: 15%;\\n  height: 15%;\\n  background-color: #333;\\n  border-radius: 100%;\\n  -webkit-animation: sk-circleBounceDelay 1.2s infinite ease-in-out both;\\n  animation: sk-circleBounceDelay 1.2s infinite ease-in-out both; }\\n\\n.sk-circle .sk-circle2 {\\n  -webkit-transform: rotate(30deg);\\n  transform: rotate(30deg); }\\n\\n.sk-circle .sk-circle3 {\\n  -webkit-transform: rotate(60deg);\\n  transform: rotate(60deg); }\\n\\n.sk-circle .sk-circle4 {\\n  -webkit-transform: rotate(90deg);\\n  transform: rotate(90deg); }\\n\\n.sk-circle .sk-circle5 {\\n  -webkit-transform: rotate(120deg);\\n  transform: rotate(120deg); }\\n\\n.sk-circle .sk-circle6 {\\n  -webkit-transform: rotate(150deg);\\n  transform: rotate(150deg); }\\n\\n.sk-circle .sk-circle7 {\\n  -webkit-transform: rotate(180deg);\\n  transform: rotate(180deg); }\\n\\n.sk-circle .sk-circle8 {\\n  -webkit-transform: rotate(210deg);\\n  transform: rotate(210deg); }\\n\\n.sk-circle .sk-circle9 {\\n  -webkit-transform: rotate(240deg);\\n  transform: rotate(240deg); }\\n\\n.sk-circle .sk-circle10 {\\n  -webkit-transform: rotate(270deg);\\n  transform: rotate(270deg); }\\n\\n.sk-circle .sk-circle11 {\\n  -webkit-transform: rotate(300deg);\\n  transform: rotate(300deg); }\\n\\n.sk-circle .sk-circle12 {\\n  -webkit-transform: rotate(330deg);\\n  transform: rotate(330deg); }\\n\\n.sk-circle .sk-circle2:before {\\n  -webkit-animation-delay: -1.1s;\\n  animation-delay: -1.1s; }\\n\\n.sk-circle .sk-circle3:before {\\n  -webkit-animation-delay: -1s;\\n  animation-delay: -1s; }\\n\\n.sk-circle .sk-circle4:before {\\n  -webkit-animation-delay: -0.9s;\\n  animation-delay: -0.9s; }\\n\\n.sk-circle .sk-circle5:before {\\n  -webkit-animation-delay: -0.8s;\\n  animation-delay: -0.8s; }\\n\\n.sk-circle .sk-circle6:before {\\n  -webkit-animation-delay: -0.7s;\\n  animation-delay: -0.7s; }\\n\\n.sk-circle .sk-circle7:before {\\n  -webkit-animation-delay: -0.6s;\\n  animation-delay: -0.6s; }\\n\\n.sk-circle .sk-circle8:before {\\n  -webkit-animation-delay: -0.5s;\\n  animation-delay: -0.5s; }\\n\\n.sk-circle .sk-circle9:before {\\n  -webkit-animation-delay: -0.4s;\\n  animation-delay: -0.4s; }\\n\\n.sk-circle .sk-circle10:before {\\n  -webkit-animation-delay: -0.3s;\\n  animation-delay: -0.3s; }\\n\\n.sk-circle .sk-circle11:before {\\n  -webkit-animation-delay: -0.2s;\\n  animation-delay: -0.2s; }\\n\\n.sk-circle .sk-circle12:before {\\n  -webkit-animation-delay: -0.1s;\\n  animation-delay: -0.1s; }\\n\\n@-webkit-keyframes sk-circleBounceDelay {\\n  0%, 80%, 100% {\\n    -webkit-transform: scale(0);\\n    transform: scale(0); }\\n  40% {\\n    -webkit-transform: scale(1);\\n    transform: scale(1); } }\\n\\n@keyframes sk-circleBounceDelay {\\n  0%, 80%, 100% {\\n    -webkit-transform: scale(0);\\n    transform: scale(0); }\\n  40% {\\n    -webkit-transform: scale(1);\\n    transform: scale(1); } }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-spinner',\n  templateUrl: './loading-spinner.component.html',\n  styleUrls: ['./loading-spinner.component.scss']\n})\nexport class LoadingSpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyCkbNFejsdFQ2Z8buoht2ziyYrD3on1DPY\",\n    authDomain: \"preorder2-fe324.firebaseapp.com\",\n    databaseURL: \"https://preorder2-fe324.firebaseio.com\",\n    projectId: \"preorder2-fe324\",\n    storageBucket: \"preorder2-fe324.appspot.com\",\n    messagingSenderId: \"196510039506\"\n  }\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}